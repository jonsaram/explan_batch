<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dashboardCorPerformance">

    <cache />
    
    <select id="getCostSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getCostSales */
        WITH TABLE_A AS (  
                    /* 매출정보 */
                    SELECT A.BRAND_ID
                          ,A.STORE_ID
                          ,B.BRAND_MENU_ID
                          ,SUBSTR(D.YYYYMMDD, 1, 7) AS YYYYMM
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             AND  SUBSTR(D.YYYYMMDD, 1, 7) BETWEEN #{startDate} AND #{endDate}
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(storeId) ">
                        AND    A.STORE_ID = #{storeId} 
                    </if>
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION     = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR    = #{supervisor}
                    </if>
                    GROUP BY A.BRAND_ID
                            ,A.STORE_ID
                            ,B.BRAND_MENU_ID
                            ,SUBSTR(D.YYYYMMDD, 1, 7)
        )
        ,TABLE_B AS (  
                    /* 원가율 */
                    SELECT BRAND_ID
                          ,YYYYMM
                          ,BRAND_MENU_ID
                          ,SELLING_PRICE
                          ,COST_PRICE
                          ,ROUND(COST_PRICE/SELLING_PRICE,5) AS COST_RATIO
                    FROM VIEW_MENU_PRICE_INFO_HISTORY
                    WHERE  1 = 1
                    AND    BRAND_ID   = #{brandId}
                    AND    YYYYMM  BETWEEN #{startDate} AND #{endDate}
        )
        SELECT A.YYYYMM
              ,ROUND((SUM(A.SALES) * AVG(B.COST_RATIO))/10000) AS SALES_COST
        FROM TABLE_A A
             JOIN TABLE_B B
                  ON  A.BRAND_ID      = B.BRAND_ID
                  AND A.BRAND_MENU_ID = B.BRAND_MENU_ID
                  AND A.YYYYMM = B.YYYYMM
        GROUP BY A.YYYYMM
        ORDER BY A.YYYYMM
    </select>
    
    <select id="getCostSales_bak" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getCostSales */
        WITH TABLE_A AS (  
                    /* 매출정보 */
                    SELECT A.BRAND_ID
                          ,A.STORE_ID
                          ,B.BRAND_MENU_ID
                          ,D.YEAR
                          ,D.MONTH
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             AND (D.YEAR||'-'||D.MONTH) = #{seartDate}
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(storeId) ">
                        AND    A.STORE_ID = #{storeId} 
                    </if>
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION     = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR    = #{supervisor}
                    </if>
                    GROUP BY A.BRAND_ID
                            ,A.STORE_ID
                            ,B.BRAND_MENU_ID
                            ,D.YEAR
                            ,D.MONTH
        )
        ,TABLE_B AS (  
                    /* 원가율 */
                    SELECT BRAND_ID
                          ,YYYYMM
                          ,BRAND_MENU_ID
                          ,SELLING_PRICE
                          ,COST_PRICE
                          ,ROUND(COST_PRICE/SELLING_PRICE,5) AS COST_RATIO
                    FROM VIEW_MENU_PRICE_INFO_HISTORY
                    WHERE  1 = 1
                    AND    BRAND_ID   = #{brandId}
        )
        SELECT A.YEAR
              ,A.MONTH
              ,ROUND(SUM(A.SALES) * AVG(B.COST_RATIO)) AS SALES_COST
        FROM TABLE_A A
             JOIN TABLE_B B
                  ON  A.BRAND_ID      = B.BRAND_ID
                  AND A.BRAND_MENU_ID = B.BRAND_MENU_ID
                  AND (A.YEAR||'-'||A.MONTH) = B.YYYYMM
        GROUP BY A.YEAR
                ,A.MONTH
        ORDER BY A.YEAR
                ,A.MONTH
    </select>
    
    <select id="getAISales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getAISales */
        SELECT  B.YEAR||'-'||B.MONTH AS YYYYMM
               ,ROUND(SUM(B.AMOUNT)/10000) AS AMOUNT
        FROM    TBL_EXP_STORE_MST A
                JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                  ON  A.BRAND_ID = B.BRAND_ID
                  AND A.STORE_ID = B.STORE_ID
                  AND B.SUBJECT  = 'SUBJECT_005'
                  AND B.PREDICT_METHOD = 'MONTHLY_START'
                  AND (B.YEAR||'-'||B.MONTH) BETWEEN #{startDate} AND #{endDate}
        WHERE   A.BRAND_ID = #{brandId}
        <if test=" !'ALL'.equals(storeId) ">
            AND    A.STORE_ID = #{storeId} 
        </if>
        <if test=" !'ALL'.equals(region) ">
            AND    A.REGION     = #{region}
        </if>
        <if test=" !'ALL'.equals(supervisor) ">
            AND    A.SUPERVISOR    = #{supervisor}
        </if>
        GROUP BY B.YEAR||'-'||B.MONTH
    </select>
    <select id="getAISales_BAK" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getAISales */
        SELECT  ROUND(SUM(B.AMOUNT)) AS AMOUNT
        FROM    TBL_EXP_STORE_MST A
                JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                  ON  A.BRAND_ID = B.BRAND_ID
                  AND A.STORE_ID = B.STORE_ID
                  AND B.SUBJECT  = 'SUBJECT_005'
                  AND B.PREDICT_METHOD = 'MONTHLY_START'
                  AND (B.YEAR||'-'||B.MONTH) = #{seartDate}
        WHERE   A.BRAND_ID = #{brandId}
        <if test=" !'ALL'.equals(storeId) ">
            AND    A.STORE_ID = #{storeId} 
        </if>
        <if test=" !'ALL'.equals(region) ">
            AND    A.REGION     = #{region}
        </if>
        <if test=" !'ALL'.equals(supervisor) ">
            AND    A.SUPERVISOR    = #{supervisor}
        </if>
    </select>
    
    <select id="getSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getSales */
        WITH TABLE_A AS (
            SELECT  REGIST_YM
                   ,BUSINESS_PROFIT_RATIO  AS BUSINESS_PROFIT_RATIO
            FROM    TBL_EXP_BRAND_BUSINESS_PROFIT_RATIO
            WHERE   1 = 1
            AND     BRAND_ID = #{brandId}
        )
        ,TABLE_B AS (      
            SELECT B.YEAR
                  ,B.MONTH
                  ,B.YEAR||'-'||B.MONTH   AS YEAR_MONTH
                  ,B.YEAR||B.MONTH        AS YM
                  ,SUM(B.GROSS_SALES)     AS AMOUNT
            FROM   TBL_EXP_STORE_MST  A
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                     ON  1 = 1
                     AND A.STORE_ID   = B.STORE_ID
                     AND  SUBSTR(B.YYYYMMDD, 1, 7)  BETWEEN #{startDate} AND #{endDate}
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
	        <if test=" !'ALL'.equals(region) ">
	            AND    A.REGION     = #{region}
	        </if>
	        <if test=" !'ALL'.equals(supervisor) ">
	            AND    A.SUPERVISOR    = #{supervisor}
	        </if>
	        <if test=" !'ALL'.equals(storeId) ">
	            AND    A.STORE_ID    = #{storeId}
	        </if>
            GROUP BY B.YEAR
                    ,B.MONTH
        ),
        RANKED_A AS (
            /* YEAR_MONTH별 가장 가까운 REGIST_YM 찾기 */
            SELECT  TABLE_A.REGIST_YM
                   ,TABLE_A.BUSINESS_PROFIT_RATIO
                   ,TABLE_B.YEAR_MONTH
                   ,TABLE_B.YM
                   ,ROW_NUMBER() OVER (PARTITION BY TABLE_B.YM ORDER BY TABLE_A.REGIST_YM DESC) AS RN
            FROM TABLE_A 
                 CROSS JOIN TABLE_B
            WHERE TABLE_A.REGIST_YM <![CDATA[<=]]> TABLE_B.YM  /* 가장 가까운 REGIST_YM 선택 */ 
        ),
        MIN_A AS (
            /* A 테이블에서 가장 작은 REGIST_YM (예외 처리용) */
            SELECT REGIST_YM
                  ,BUSINESS_PROFIT_RATIO 
            FROM   TABLE_A 
            WHERE  REGIST_YM = (SELECT MIN(REGIST_YM) FROM TABLE_A)
        )
        SELECT TABLE_B.YEAR
              ,TABLE_B.MONTH
              ,TABLE_B.YEAR_MONTH
              ,ROUND(TABLE_B.AMOUNT /10000) AS AMOUNT
              ,ROUND( ((TABLE_B.AMOUNT * RA.BUSINESS_PROFIT_RATIO) /100)/10000 ) AS BRAND_PROFIT_AMOUNT
              ,0 AS TAX_AMOUNT
        FROM TABLE_B
             LEFT JOIN RANKED_A RA 
                  ON  TABLE_B.YM = RA.YM 
                  AND RA.RN = 1
             LEFT JOIN MIN_A MA 
                  ON RA.REGIST_YM IS NULL  /* 가장 작은 REGIST_YM를 기본값으로 사용 */ 
        ORDER BY TABLE_B.YEAR_MONTH
    </select>

    
    <select id="getStoreMenuGrp1SalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStoreMenuGrp1SalesRanking */
        SELECT A.GROUP_1
              ,A.GROUP_1_NM
              ,A.SALES
        FROM   (
                   SELECT A.STORE_ID
                         ,B.GROUP_1
                         ,B.GROUP_1_NM
                         ,SUM(C.SALES) AS SALES
                   FROM   TBL_EXP_STORE_MST A
                          JOIN TBL_EXP_STORE_MENU_MST B
                            ON  1 = 1
                            AND A.STORE_ID = B.STORE_ID 
                          JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                            ON   1 = 1
                            AND  B.MENU_ID = C.MENU_ID
                            AND  C.YEAR   =  #{year}
                            AND  C.MONTH  =  #{month}
                   WHERE  1 = 1 
                   AND    A.BRAND_ID   = #{brandId}
                   AND    A.STORE_ID   = #{storeId}
                   GROUP BY A.STORE_ID
                           ,B.GROUP_1
                           ,B.GROUP_1_NM
                           ,C.YEAR
                           ,C.MONTH
                   ORDER BY SUM(C.SALES) DESC
                ) A
        WHERE  1 =1 
    </select>
    
        <select id="getStoreMenuSalesTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
       /* dashboardCorPerformance.getStoreMenuSalesTop5 */
        WITH TOP5_MENU AS (
            SELECT A.STORE_ID
                  ,A.MENU_ID
                  ,A.MENU_NM
                  ,B.YEAR
                  ,B.MONTH
                  ,B.DAY
            FROM   (
                       /* 매출상위 5개 메뉴 */
                       SELECT  STORE_ID
                              ,MENU_ID
                              ,MENU_NM
                       FROM   (
                               SELECT A.STORE_ID
                                     ,B.MENU_ID
                                     ,B.MENU_NM
                                     ,C.YEAR
                                     ,C.MONTH
                                     ,SUM(C.SALES) AS SALES
                               FROM   TBL_EXP_STORE_MST A
                                      JOIN TBL_EXP_STORE_MENU_MST B
                                        ON  1 = 1
                                        AND A.STORE_ID = B.STORE_ID     
                                        <if test=" !'ALL'.equals(group1) ">
                                            AND    B.GROUP_1     = #{group1}
                                        </if>     
                                        <if test=" !'ALL'.equals(group2) ">
                                            AND    B.GROUP_2     = #{group2}
                                        </if>     
                                        <if test=" !'ALL'.equals(menu) ">
                                            AND    B.MENU_CD     = #{menu}
                                        </if>
                                        
                                      JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                                        ON   1 = 1
                                        AND  B.MENU_ID = C.MENU_ID
                                        AND  C.YEAR   =  #{year}
                                        AND  C.MONTH  =  #{month}
                               WHERE  1 = 1 
                               AND    A.BRAND_ID   = #{brandId}
                               AND    A.STORE_ID   = #{storeId}
                               GROUP BY A.STORE_ID
                                       ,B.MENU_ID
                                       ,B.MENU_NM
                                       ,C.YEAR
                                       ,C.MONTH
                               ORDER BY SUM(C.SALES) DESC
                       )
                       WHERE  1 =1 
                       AND    ROWNUM   <![CDATA[<=]]>   5
                   ) A
                   FULL JOIN (
                                SELECT #{year}  AS YEAR
                                      ,#{month} AS MONTH
                                      ,LPAD(LEVEL, 2, '0') AS DAY
                                FROM DUAL
                                CONNECT BY LEVEL  <![CDATA[<=]]>  TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(#{year} || #{month} || '01', 'YYYYMMDD')), 'DD'))
                            ) B
                     ON  1 = 1
               WHERE 1 = 1
               ORDER BY B.YEAR
                  ,B.MONTH
                  ,B.DAY
                  ,A.MENU_ID
            )
        SELECT TOP5_MENU.YEAR
              ,TOP5_MENU.MONTH
              ,TOP5_MENU.DAY
              ,TOP5_MENU.MENU_ID
              ,TOP5_MENU.MENU_NM
              ,NVL(SALES.SALES,0) AS SALES
        FROM   TOP5_MENU
               LEFT OUTER JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST SALES
                 ON  1 = 1 
                 AND TOP5_MENU.STORE_ID = SALES.STORE_ID  
                 AND TOP5_MENU.MENU_ID  = SALES.MENU_ID 
                 AND TOP5_MENU.YEAR     = SALES.YEAR  
                 AND TOP5_MENU.MONTH    = SALES.MONTH 
                 AND TOP5_MENU.DAY      = SALES.DAY  
        WHERE 1 = 1
        ORDER BY TOP5_MENU.YEAR
                ,TOP5_MENU.MONTH
                ,TOP5_MENU.DAY
                ,TOP5_MENU.MENU_ID
    </select>
    
    <select id="getStoreMenuSalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStoreMenuSalesRanking */
        SELECT A.STORE_ID
              ,A.MENU_ID
              ,A.MENU_NM
              ,A.SALES
        FROM   (
                   SELECT A.STORE_ID
                         ,B.MENU_ID
                         ,B.MENU_NM
                         ,SUM(C.SALES) AS SALES
                   FROM   TBL_EXP_STORE_MST A
                          JOIN TBL_EXP_STORE_MENU_MST B
                            ON  1 = 1
                            AND A.STORE_ID = B.STORE_ID    
                            <if test=" !'ALL'.equals(group1) ">
                                AND    B.GROUP_1     = #{group1}
                            </if>     
                            <if test=" !'ALL'.equals(group2) ">
                                AND    B.GROUP_2     = #{group2}
                            </if>     
                            <if test=" !'ALL'.equals(menu) ">
                                AND    B.MENU_CD     = #{menu}
                            </if>
                          JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                            ON   1 = 1
                            AND  B.MENU_ID = C.MENU_ID
                            AND  C.YEAR   =  #{year}
                            AND  C.MONTH  =  #{month}
                   WHERE  1 = 1 
                   AND    A.BRAND_ID   = #{brandId}
                   AND    A.STORE_ID   = #{storeId}
                   GROUP BY A.STORE_ID
                         ,B.MENU_ID
                         ,B.MENU_NM
                   ORDER BY SUM(C.SALES) DESC
                ) A
        WHERE  1 =1 
    </select>
    
    <select id="getStoreMenuGrp1List" resultType="java.util.HashMap" flushCache="true"  useCache="false">
       /* dashboardCorPerformance.getStoreMenuGrp1List */
       SELECT DISTINCT GROUP_1 
             ,GROUP_1_NM
       FROM   TBL_EXP_STORE_MENU_MST
       WHERE  1 = 1
       AND    STORE_ID = #{storeId}
       AND    DEL_FLAG IS NULL
       ORDER BY GROUP_1_NM
    </select>
    
    <select id="getStoreMenuGrp2List" resultType="java.util.HashMap" flushCache="true"  useCache="false">
       /* dashboardCorPerformance.getStoreMenuGrp2List */
       SELECT DISTINCT GROUP_2
             ,GROUP_2_NM
       FROM   TBL_EXP_STORE_MENU_MST
       WHERE  1 = 1
       AND    STORE_ID = #{storeId}
       AND    DEL_FLAG IS NULL
       <if test=" !'ALL'.equals(group1) ">
           AND    GROUP_1     = #{group1}
       </if>
       ORDER BY GROUP_2_NM
    </select>
    
    <select id="getStoreMenuList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStoreMenuList */
        SELECT DISTINCT MENU_CD
              ,MENU_NM
        FROM   TBL_EXP_STORE_MENU_MST
        WHERE  1 = 1
        AND    STORE_ID = #{storeId}
        AND    DEL_FLAG IS NULL
        <if test=" !'ALL'.equals(group1) ">
            AND    GROUP_1     = #{group1}
        </if>
        <if test=" !'ALL'.equals(group2) ">
            AND    GROUP_2     = #{group2}
        </if>
        AND MENU_CD IS NOT NULL
        AND MENU_NM IS NOT NULL
        ORDER BY MENU_NM
    </select>
    
    <select id="getSalesUpperLowerStore" resultType="java.util.HashMap" flushCache="true"  useCache="false">
       /* dashboardCorPerformance.getSalesUpperLowerStore */
        WITH SALES_DATA AS (
            /*지점별, 년도별, 월별 매출 합계 조회 */
            SELECT  A.STORE_ID
                   ,A.STORE_NM
                   ,B.YEAR
                   ,B.MONTH
                   ,SUM(B.GROSS_SALES) AS GROSS_SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                     ON A.STORE_ID = B.STORE_ID
                     AND B.YEAR||'-'||B.MONTH = #{seartDate}
            WHERE  A.BRAND_ID = #{brandId}
	        <if test=" !'ALL'.equals(region) ">
	            AND    A.REGION     = #{region}
	        </if>
	        <if test=" !'ALL'.equals(supervisor) ">
	            AND    A.SUPERVISOR    = #{supervisor}
	        </if>
	        <if test=" !'ALL'.equals(storeId) ">
	            AND    A.STORE_ID    = #{storeId}
	        </if>
            GROUP BY A.STORE_ID, A.STORE_NM, B.YEAR, B.MONTH
        ),
        RANKED_SALES AS (
            /* 매출을 기준으로 순위를 매김 (ORDER BY GROSS_SALES DESC) */ 
            SELECT  STORE_ID
                   ,STORE_NM
                   ,YEAR
                   ,MONTH
                   ,GROSS_SALES
                   ,PERCENT_RANK() OVER (ORDER BY GROSS_SALES DESC) AS SALES_PERCENTILE
            FROM SALES_DATA
        )
        SELECT YEAR
             , MONTH
             , STORE_NM
             , ROUND(SUM(GROSS_SALES)/10000) AS GROSS_SALES
        FROM RANKED_SALES
        WHERE 1 =1 
        <if test=" 'UPPER'.equals(upLow) ">
            AND  SALES_PERCENTILE <![CDATA[<=]]> #{upVal}
        </if>
        
        <if test=" 'LOWER'.equals(upLow) ">
            AND  SALES_PERCENTILE <![CDATA[>=]]> #{lowVal}
        </if>
         
        GROUP BY YEAR
               , MONTH
               , STORE_NM
        
        <if test=" 'UPPER'.equals(upLow) ">
            ORDER BY GROSS_SALES DESC
        </if>
        
        <if test=" 'LOWER'.equals(upLow) ">
            ORDER BY GROSS_SALES
        </if>       
        
    </select>
    
    <select id="getUpperLowerSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
       /* dashboardCorPerformance.getUpperLowerSales */
        WITH SALES_DATA AS (
            /*지점별, 년도별, 월별 매출 합계 조회 */
            SELECT  A.STORE_ID
                   ,A.STORE_NM
                   ,B.YEAR
                   ,B.MONTH
                   ,SUM(B.GROSS_SALES) AS GROSS_SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                     ON A.STORE_ID = B.STORE_ID
                     AND B.YEAR||'-'||B.MONTH = #{seartDate}
            WHERE  A.BRAND_ID = #{brandId}
            <if test=" !'ALL'.equals(region) ">
                AND    A.REGION     = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) ">
                AND    A.SUPERVISOR    = #{supervisor}
            </if>
            <if test=" !'ALL'.equals(storeId) ">
                AND    A.STORE_ID    = #{storeId}
            </if>
            GROUP BY A.STORE_ID, A.STORE_NM, B.YEAR, B.MONTH
        ),
        RANKED_SALES AS (
            /* 매출을 기준으로 순위를 매김 (ORDER BY GROSS_SALES DESC) */ 
            SELECT  STORE_ID
                   ,STORE_NM
                   ,YEAR
                   ,MONTH
                   ,GROSS_SALES
                   ,PERCENT_RANK() OVER (ORDER BY GROSS_SALES DESC) AS SALES_PERCENTILE
            FROM SALES_DATA
        )
        SELECT YEAR
             , MONTH
             ,ROUND(AVG(CASE WHEN SALES_PERCENTILE  <![CDATA[<=]]>  #{upVal} THEN GROSS_SALES END)/1000) AS UPPER_20_AVG
             ,ROUND(AVG(CASE WHEN SALES_PERCENTILE  <![CDATA[>=]]>  #{lowVal} THEN GROSS_SALES END)/1000) AS LOWER_20_AVG
             ,ROUND(AVG(GROSS_SALES)/1000) AS TOTAL_AVG
        FROM RANKED_SALES
        GROUP BY YEAR
               , MONTH
    </select>
    
    <!-- 매출액 순위 -->
    <select id="getSalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getSalesRanking */
        SELECT A.STORE_ID
              ,A.STORE_NM
              ,SUM(B.GROSS_SALES) AS AMOUNT
              ,ROUND(SUM(B.GROSS_SALES)/10000) AS AMOUNT1
        FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
               JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                 ON  1 = 1
                 AND A.STORE_ID   = B.STORE_ID
                 AND TO_DATE(B.YEAR||'-'||B.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
        WHERE  1 = 1
        AND    A.BRAND_ID   = #{brandId} 
        <if test=" !'ALL'.equals(region) ">
            AND    A.REGION     = #{region}
        </if>
        <if test=" !'ALL'.equals(supervisor) ">
            AND    A.SUPERVISOR    = #{supervisor}
        </if>
        <if test=" !'ALL'.equals(storeId) ">
            AND    A.STORE_ID    = #{storeId}
        </if>
        
        GROUP BY A.STORE_ID
                ,A.STORE_NM
        ORDER BY  SUM(B.GROSS_SALES) DESC
    </select>

    <select id="getBusinessProfitRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getBusinessProfitRatio */        
        WITH TABLE_SALES AS (
                     /*  매출 */
                    SELECT A.STORE_ID
                          ,A.STORE_NM
                          ,B.YEAR
                          ,B.MONTH
                          ,SUM(B.GROSS_SALES) AS AMOUNT
                    FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND TO_DATE(B.YEAR||'-'||B.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId} 
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION     = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR    = #{supervisor}
                    </if>
			        <if test=" !'ALL'.equals(storeId) ">
			            AND    A.STORE_ID    = #{storeId}
			        </if>
                    GROUP BY A.STORE_ID
                            ,A.STORE_NM
                            ,B.YEAR
                            ,B.MONTH
        )
       ,TABLE_AI  AS (
                /* AI 영업이익 */
                SELECT  A.STORE_ID
                       ,A.STORE_NM
                       ,B.YEAR
                       ,B.MONTH
                       ,SUM(CASE WHEN B.SUBJECT = 'SUBJECT_104' THEN B.AMOUNT ELSE 0 END) AS BUSINESS_PROFIT_RATIO
                FROM    TBL_EXP_STORE_MST A
                        JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                          ON A.BRAND_ID = B.BRAND_ID
                         AND A.STORE_ID = B.STORE_ID
                         AND B.SUBJECT = 'SUBJECT_104'
                         AND B.PREDICT_METHOD = 'MONTHLY_START'
                         AND TO_DATE(B.YEAR || '-' || B.MONTH, 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                WHERE   A.BRAND_ID = #{brandId}
                GROUP BY B.BRAND_ID,
                         A.STORE_ID,
                         A.STORE_NM,
                         B.YEAR,
                         B.MONTH
        )
       ,TABLE_BRAND  AS (
                SELECT BUSINESS_PROFIT_RATIO
                FROM  TBL_EXP_BRAND_BUSINESS_PROFIT_RATIO
                WHERE 1 = 1
                AND   BRAND_ID = #{brandId}
                AND   REGIST_YM = (SELECT MAX(REGIST_YM) FROM   TBL_EXP_BRAND_BUSINESS_PROFIT_RATIO)       
        )
        SELECT A.STORE_NM
              ,ROUND(SUM(NVL(A.AMOUNT_AI,0))/10000)    AS AMOUNT_AI
              ,ROUND(SUM(NVL(A.AMOUNT_BRAND,0))/10000) AS AMOUNT_BRAND
              ,ROUND(SUM(NVL(A.AMOUNT_TAX,0))/10000)   AS AMOUNT_TAX
        FROM   (
                 SELECT TABLE_SALES.STORE_NM
                       ,TABLE_SALES.YEAR
                       ,TABLE_SALES.MONTH
                       ,TABLE_SALES.AMOUNT
                       ,TABLE_AI.BUSINESS_PROFIT_RATIO AS BUSINESS_PROFIT_RATIO
                       ,TABLE_SALES.AMOUNT * TABLE_AI.BUSINESS_PROFIT_RATIO    AS AMOUNT_AI
                       ,TABLE_SALES.AMOUNT * (TABLE_BRAND.BUSINESS_PROFIT_RATIO/100 ) AS AMOUNT_BRAND
                       ,0                                                      AS AMOUNT_TAX
                 FROM   TABLE_SALES
                        LEFT OUTER JOIN TABLE_AI
                            ON  1 = 1
                            AND TABLE_SALES.STORE_ID = TABLE_AI.STORE_ID
                            AND TABLE_SALES.YEAR     = TABLE_AI.YEAR
                            AND TABLE_SALES.MONTH    = TABLE_AI.MONTH
                        LEFT OUTER JOIN TABLE_BRAND
                            ON  1 = 1
               ) A
        GROUP BY  A.STORE_NM   
        ORDER BY  SUM(A.AMOUNT_BRAND)  DESC
                 ,SUM(A.AMOUNT_TAX)  DESC 
    </select>
    
    <!-- 지역별 순위 -->
    <select id="getRegionsRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getRegionsRanking */
        SELECT A.REGION
              ,A.REGION_NM
              ,SUM(A.GROSS_SALES) AS AMOUNT
              ,ROUND(SUM(A.GROSS_SALES) / 10000) AS AMOUNT1
        FROM (
              SELECT A.REGION
                    ,GET_BRAND_CODE_NM(#{brandId} , 'STORE_REGION', A.REGION) AS REGION_NM
                    ,B.GROSS_SALES
              FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                     JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                       ON  1 = 1
                       AND A.STORE_ID   = B.STORE_ID
                       AND TO_DATE(B.YEAR||'-'||B.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
              WHERE  1 = 1
              AND    A.BRAND_ID   = #{brandId} 
        )A
        GROUP BY A.REGION, REGION_NM
        ORDER BY SUM(A.GROSS_SALES) DESC
    </select>
    
    <select id="getPreMonthAchieveRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreMonthAchieveRatio */
        SELECT ROUND(AVG(PRE_MONTH_ACHIEVE_RATIO),2) AS PRE_MONTH_ACHIEVE_RATIO
        FROM   (
                    SELECT A.STORE_ID
                          ,A.STORE_NM
                          ,CASE WHEN SUM(A.PRE_AMOUNT) !=  0 THEN ROUND( (SUM(A.AMOUNT)/SUM(A.PRE_AMOUNT)) * 100 ,2)
                                ELSE 0
                           END AS PRE_MONTH_ACHIEVE_RATIO
                    FROM   (
                             /*  당월 */
                            SELECT A.STORE_ID
                                  ,A.STORE_NM
                                  ,SUM(B.GROSS_SALES) AS AMOUNT
                                  ,0                  AS PRE_AMOUNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{year} 
                                     AND B.MONTH      = #{month} 
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if> 
                            GROUP BY A.STORE_ID
                                    ,A.STORE_NM
                            UNION ALL
                             /*  전월 */
                            SELECT A.STORE_ID
                                  ,A.STORE_NM
                                  ,0                  AS AMOUNT
                                  ,SUM(B.GROSS_SALES) AS PRE_AMOUNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{prevYear}
                                     AND B.MONTH      = #{prevMonth}
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if> 
                            GROUP BY A.STORE_ID
                                    ,A.STORE_NM
                           ) A
                    GROUP BY  A.STORE_ID
                             ,A.STORE_NM
               ) A
    </select> 
    
    <select id="getMonthAccrue" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getMonthAccrue */        
        WITH TABLE_SALES AS (
                     /*  매출 */
                    SELECT A.STORE_ID
                          ,A.STORE_NM
                          ,B.YEAR
                          ,B.MONTH
                          ,SUM(B.GROSS_SALES) AS AMOUNT
                    FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND TO_DATE(B.YEAR||'-'||B.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId} 
                    <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                      AND    A.SUPERVISOR = #{supervisor}
                    </if>
                    GROUP BY A.STORE_ID
                            ,A.STORE_NM
                            ,B.YEAR
                            ,B.MONTH
        )
       ,TABLE_YEAR_MONTH  AS (
                SELECT TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM')               AS YEAR_MONTH
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 0, 4) AS YEAR
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 6, 2) AS MONTH
                FROM  (
                       SELECT TO_DATE(#{startYMD}, 'YYYY-MM-DD') AS START_DATE, 
                              TO_DATE(#{endYMD}, 'YYYY-MM-DD') AS END_DATE
                       FROM DUAL
                      ) A
                CONNECT BY LEVEL  <![CDATA[<=]]>   MONTHS_BETWEEN(TRUNC(A.END_DATE, 'MM'), TRUNC(A.START_DATE, 'MM')) + 1
        )
        /* 매입 필요*/
        SELECT A.YEAR
              ,A.MONTH
              ,NVL(A.AMOUNT_SALES,0)           AS AMOUNT_SALES
              ,NVL(A.GROSS_PROFIT_OF_SALES,0)  AS GROSS_PROFIT_OF_SALES
              ,NVL(A.NET_INCOME,0)             AS NET_INCOME
              ,NVL(A.OPERATING_INCOME,0)       AS OPERATING_INCOME
        FROM   (
                 SELECT TABLE_YEAR_MONTH.YEAR
                       ,TABLE_YEAR_MONTH.MONTH
                       ,SUM(TABLE_SALES.AMOUNT) AS AMOUNT_SALES           /* 매출액 */
                       ,SUM(0)                  AS GROSS_PROFIT_OF_SALES  /* 매출총이익 */
                       ,SUM(0)                  AS NET_INCOME             /* 당기순이익 */  
                       ,SUM(0)                  AS OPERATING_INCOME       /* 영업이익  */
                 FROM   TABLE_YEAR_MONTH
                        LEFT OUTER JOIN TABLE_SALES
                            ON  1 = 1
                            AND TABLE_YEAR_MONTH.YEAR  = TABLE_SALES.YEAR
                            AND TABLE_YEAR_MONTH.MONTH = TABLE_SALES.MONTH
                 GROUP BY  TABLE_YEAR_MONTH.YEAR
                          ,TABLE_YEAR_MONTH.MONTH  
                 
               ) A  
        ORDER BY  A.YEAR
                 ,A.MONTH
    </select>
    
    <select id="getMonthAccrue_BAK" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMonthAccrue */
        WITH TABLE_FINANCIAL AS (
             SELECT    A.BRAND_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,A.SUBJECT_001
                      ,A.SUBJECT_003
                      ,A.SUBJECT_005
                      ,A.SUBJECT_010
                FROM   (
                        SELECT B.BRAND_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                        FROM   TBL_EXP_STORE_MST A
                               JOIN TBL_EXP_STORE_FINANCIAL B
                                   ON  1 = 1
                                   AND B.SUBJECT IN ('SUBJECT_001','SUBJECT_003','SUBJECT_010','SUBJECT_005')
                                   AND A.STORE_ID   = B.STORE_ID
                                   AND A.BRAND_ID   = B.BRAND_ID
                                   AND TO_DATE( (B.YEAR||'-'||B.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE(#{startYMD} , 'YYYY-MM-DD') AND TO_DATE( #{endYMD} , 'YYYY-MM-DD')
                        WHERE  1 = 1
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                            AND    A.STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                          AND    A.SUPERVISOR = #{supervisor}
                        </if>
                        GROUP BY  B.BRAND_ID
                                 ,B.YEAR
                                 ,B.MONTH
                ) A
                WHERE 1 = 1 
                ORDER BY  A.BRAND_ID
                         ,A.YEAR
                         ,A.MONTH
        )
       ,TABLE_YEAR_MONTH  AS (
                SELECT TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM')               AS YEAR_MONTH
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 0, 4) AS YEAR
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 6, 2) AS MONTH
                FROM  (
                       SELECT TO_DATE(#{startYMD}, 'YYYY-MM-DD') AS START_DATE, 
                              TO_DATE(#{endYMD}, 'YYYY-MM-DD') AS END_DATE
                       FROM DUAL
                      ) A
                CONNECT BY LEVEL <![CDATA[<=]]>  MONTHS_BETWEEN(TRUNC(A.END_DATE, 'MM'), TRUNC(A.START_DATE, 'MM')) + 1
        )
        SELECT TABLE_YEAR_MONTH.YEAR
              ,TABLE_YEAR_MONTH.MONTH
              ,NVL(TABLE_FINANCIAL.SUBJECT_001,0) AS SUBJECT_001 
              ,NVL(TABLE_FINANCIAL.SUBJECT_003,0) AS SUBJECT_003
              ,NVL(TABLE_FINANCIAL.SUBJECT_005,0) AS SUBJECT_005
              ,NVL(TABLE_FINANCIAL.SUBJECT_010,0) AS SUBJECT_010
        FROM   TABLE_YEAR_MONTH
               LEFT OUTER JOIN TABLE_FINANCIAL
                   ON  1 = 1
                   AND TABLE_YEAR_MONTH.YEAR = TABLE_FINANCIAL.YEAR
                   AND TABLE_YEAR_MONTH.MONTH = TABLE_FINANCIAL.MONTH
        ORDER BY TABLE_YEAR_MONTH.YEAR
               ,TABLE_YEAR_MONTH.MONTH
    </select>
        <select id="getMonthRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getMonthRatio */
        WITH TABLE_FINANCIAL AS (
             SELECT    A.BRAND_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,SUBJECT_001    AS SUBJECT1
                      ,SUBJECT_003    AS SUBJECT2
                      ,SUBJECT_005    AS SUBJECT3
                      ,SUBJECT_010    AS SUBJECT4
                      ,ROUND(SUBJECT_003 * 100/SUBJECT_001) AS SUBJECT_003
                      ,ROUND(SUBJECT_005 * 100/SUBJECT_001) AS SUBJECT_005
                      ,ROUND(SUBJECT_010 * 100/SUBJECT_001) AS SUBJECT_010
                FROM   (
                        SELECT B.BRAND_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                        FROM   TBL_EXP_STORE_MST A
                               JOIN TBL_EXP_STORE_FINANCIAL B
                                   ON  1 = 1
                                   AND A.STORE_ID = B.STORE_ID
                                   AND A.BRAND_ID   = B.BRAND_ID
                        WHERE  1 = 1
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                            AND    A.STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                          AND    A.SUPERVISOR = #{supervisor}
                        </if>
                        GROUP BY  B.BRAND_ID
                                 ,B.YEAR
                                 ,B.MONTH
                ) A
                WHERE 1 = 1
                AND   SUBJECT_001 != 0 
                AND   TO_DATE( (A.YEAR||'-'||A.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE(#{startYMD} , 'YYYY-MM-DD') AND TO_DATE( #{endYMD} , 'YYYY-MM-DD')
                ORDER BY  A.BRAND_ID
                         ,A.YEAR
                         ,A.MONTH
        )
       ,TABLE_YEAR_MONTH  AS (
                SELECT TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM')               AS YEAR_MONTH
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 0, 4) AS YEAR
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 6, 2) AS MONTH
                FROM  (
                       SELECT TO_DATE(#{startYMD}, 'YYYY-MM-DD') AS START_DATE, 
                              TO_DATE(#{endYMD}, 'YYYY-MM-DD') AS END_DATE
                       FROM DUAL
                      ) A
                CONNECT BY LEVEL   <![CDATA[<=]]>   MONTHS_BETWEEN(TRUNC(A.END_DATE, 'MM'), TRUNC(A.START_DATE, 'MM')) + 1
        )
        SELECT TABLE_YEAR_MONTH.YEAR
              ,TABLE_YEAR_MONTH.MONTH
              ,TABLE_FINANCIAL.SUBJECT1
              ,TABLE_FINANCIAL.SUBJECT2
              ,TABLE_FINANCIAL.SUBJECT3
              ,TABLE_FINANCIAL.SUBJECT4
              ,NVL(TABLE_FINANCIAL.SUBJECT_003,0) AS SUBJECT_003
              ,NVL(TABLE_FINANCIAL.SUBJECT_005,0) AS SUBJECT_005
              ,NVL(TABLE_FINANCIAL.SUBJECT_010,0) AS SUBJECT_010
        FROM   TABLE_YEAR_MONTH
               LEFT OUTER JOIN TABLE_FINANCIAL
                   ON  1 = 1
                   AND TABLE_YEAR_MONTH.YEAR = TABLE_FINANCIAL.YEAR
                   AND TABLE_YEAR_MONTH.MONTH = TABLE_FINANCIAL.MONTH
        ORDER BY TABLE_YEAR_MONTH.YEAR
               ,TABLE_YEAR_MONTH.MONTH
    </select>
    
    <select id="getStoreRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStoreRatio */
        WITH TABLE_SALES AS (
                     /*  매출 */
                    SELECT A.STORE_ID
                          ,A.STORE_NM
                          ,SUM(B.GROSS_SALES) AS AMOUNT
                    FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND TO_DATE(B.YEAR||'-'||B.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{startDate}, 'YYYY-MM')
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                        AND    A.SUPERVISOR = #{supervisor}
                    </if> 
                    GROUP BY A.STORE_ID
                            ,A.STORE_NM
        )
        /* 매입 필요*/
        SELECT A.STORE_ID
              ,A.STORE_NM
              ,CASE WHEN GROSS_PROFIT_OF_SALES = 0 THEN 0
                    ELSE ROUND(AMOUNT_SALES * 100 / GROSS_PROFIT_OF_SALES) 
                    END AS GROSS_PROFIT_OF_SALES
              ,CASE WHEN NET_INCOME = 0 THEN 0
                    ELSE ROUND(AMOUNT_SALES * 100 / NET_INCOME) 
                    END AS NET_INCOME
              ,CASE WHEN OPERATING_INCOME = 0 THEN 0
                    ELSE ROUND(AMOUNT_SALES * 100 / OPERATING_INCOME) 
                    END AS OPERATING_INCOME
        FROM   (
                 SELECT TABLE_SALES.STORE_ID
                       ,TABLE_SALES.STORE_NM
                       ,NVL(SUM(TABLE_SALES.AMOUNT),0) AS AMOUNT_SALES           /* 매출액 */
                       ,NVL(SUM(TABLE_SALES.AMOUNT),0) AS GROSS_PROFIT_OF_SALES  /* 매출총이익 */
                       ,NVL(SUM(TABLE_SALES.AMOUNT),0) AS NET_INCOME             /* 당기순이익 */  
                       ,NVL(SUM(TABLE_SALES.AMOUNT),0) AS OPERATING_INCOME       /* 영업이익  */
                 FROM   TABLE_SALES
                 GROUP BY  TABLE_SALES.STORE_ID
                          ,TABLE_SALES.STORE_NM  

               ) A  
		<include refid="common.gridOptionOrder"/>
    </select>
    
    <!-- 매출액 순위, 영업이익별 순위 -->
    <sql id="getFinancial_body">
        SELECT  ROW_NUMBER() OVER (ORDER BY A.STORE_ID, A.YEAR,A.MONTH DESC) AS RN
               ,A.STORE_ID
               ,A.YEAR
               ,A.MONTH
               ,A.STORE_NM1
               ,A.SUBJECT
               ,A.SUBJECT_NM 
               ,ROUND(A.AMOUNT/10000)      AS AMOUNT
               ,B.AMOUNT AS AMOUNT1
               ,CASE WHEN B.AMOUNT = 0 THEN 0
                    ELSE ROUND( (A.AMOUNT/B.AMOUNT) * 100 ,2)
               END AS AMOUNT_RAT
        FROM   (
                SELECT A.BRAND_ID
                      ,A.STORE_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,C.STORE_NM1
                      ,A.SUBJECT
                      ,GET_CODE_NM('FINANCIAL_SUBJECT', A.SUBJECT) AS SUBJECT_NM 
                      ,A.AMOUNT AS AMOUNT
                FROM   TBL_EXP_STORE_FINANCIAL A
                       JOIN TBL_EXP_STORE_MST C
                         ON  1 = 1
                         AND A.BRAND_ID   = C.BRAND_ID
                         AND A.STORE_ID   = C.STORE_ID 
                WHERE  1 = 1
                <if test=" !'ALL'.equals(storeCd ) and storeCd != null and storeCd != '' ">
                    AND    A.STORE_ID = #{storeCd}
                </if>
                AND    A.SUBJECT  = #{subject} 
                AND    A.BRAND_ID = #{brandId} 
                AND    A.YEAR     = #{year}
                AND    A.MONTH    = #{month}
               ) A
               JOIN (
                    SELECT A.AMOUNT
                          ,A.BRAND_ID
                          ,A.STORE_ID
                          ,A.YEAR
                          ,A.MONTH
                    FROM   TBL_EXP_STORE_FINANCIAL A
                    WHERE  1 = 1
                    <if test=" !'ALL'.equals(storeCd ) and storeCd != null and storeCd != '' ">
                        AND    A.STORE_ID = #{storeCd} 
                    </if>
                    AND    A.BRAND_ID   = #{brandId} 
                    AND    A.SUBJECT = 'SUBJECT_001' 
                    AND    A.YEAR    = #{year}
                    AND    A.MONTH   = #{month}
               ) B
                 ON  1 = 1
                 AND A.BRAND_ID   = B.BRAND_ID
                 AND A.STORE_ID   = B.STORE_ID    
                 AND A.YEAR       = B.YEAR      
                 AND A.MONTH      = B.MONTH     
        WHERE  1 = 1
    </sql> 
    
    <!-- 매출액 순위, 영업이익별 순위 -->
    <select id="getFinancial" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getFinancial */
        <include refid="getFinancial_body"/>
        ORDER BY  A.YEAR
                 ,A.MONTH
                 ,A.STORE_NM1 
    </select>
    
    <select id="getStore" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStore */
        SELECT STORE_ID
              ,STORE_NM
              ,STORE_NM1
              ,STORE_ID 
              ,STORE_ID  AS CODE_ID
              ,STORE_NM1 AS CODE_NM 
              ,ADDRESS
              ,STORE_MANAGER_NM
              ,REGION
              ,DEPARTMENT_CHARGE
              ,TO_CHAR( CONTRACT_DATE , 'YYYY-MM-DD')  AS CONTRACT_DATE 
              ,TO_CHAR( OPENING_DAY , 'YYYY-MM-DD')    AS OPENING_DAY
              ,TO_CHAR( TRANSFER_DAY , 'YYYY-MM-DD')   AS TRANSFER_DAY
              ,TO_CHAR( CLOSING_DATE , 'YYYY-MM-DD')   AS CLOSING_DATE
              ,FRANCHISE_STORE
              ,NOTE
              ,TB_ROTATION
              ,TB_ROTATION_GOAL
              ,START_MARKETING
              ,SUPERVISOR
              ,UPDATE_USER
              ,UPDATE_DATE
        FROM   TBL_EXP_STORE_MST
        WHERE  1 = 1
        <if test=" brandId != null and brandId != '' ">
            AND    BRAND_ID   = #{brandId}
        </if>
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' " >
            AND    OPENING_DAY BETWEEN TO_DATE( #{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        <if test=" dateStart != null and dateStart != '' and dateEnd != null and dateEnd != '' " >
            AND    OPENING_DAY BETWEEN TO_DATE( #{dateStart}, 'YYYY-MM') AND TO_DATE(#{dateEnd}, 'YYYY-MM')
        </if>
        <if test=" region != null and region != '' ">
            <if test=" !'ALL'.equals(region) ">
               AND    REGION = #{region} 
            </if>        
        </if>        
        ORDER BY STORE_NM
    </select>
    
    <select id="getGoalAchieveRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGoalAchieveRatio */
        SELECT  CASE #{month}  WHEN '01'  THEN ROUND( (B.AMOUNT/A.MONTH1) *100, 2) 
                               WHEN '02'  THEN ROUND( (B.AMOUNT/A.MONTH2) *100, 2)
                               WHEN '03'  THEN ROUND( (B.AMOUNT/A.MONTH3) *100, 2)
                               WHEN '04'  THEN ROUND( (B.AMOUNT/A.MONTH4) *100, 2)
                               WHEN '05'  THEN ROUND( (B.AMOUNT/A.MONTH5) *100, 2)
                               WHEN '06'  THEN ROUND( (B.AMOUNT/A.MONTH6) *100, 2)
                               WHEN '07'  THEN ROUND( (B.AMOUNT/A.MONTH7) *100, 2)
                               WHEN '08'  THEN ROUND( (B.AMOUNT/A.MONTH8) *100, 2)
                               WHEN '09'  THEN ROUND( (B.AMOUNT/A.MONTH9) *100, 2)
                               WHEN '10'  THEN ROUND( (B.AMOUNT/A.MONTH10) *100, 2)
                               WHEN '11'  THEN ROUND( (B.AMOUNT/A.MONTH11) *100, 2)
                               WHEN '12'  THEN ROUND( (B.AMOUNT/A.MONTH12) *100, 2)
                               ELSE 0
                END AS ACHIEVE
        FROM   (
                /* 매장별 목표 매출*/
                SELECT SUM(B.MONTH1)      AS MONTH1
                      ,SUM(B.MONTH2)      AS MONTH2 
                      ,SUM(B.MONTH3)      AS MONTH3 
                      ,SUM(B.MONTH4)      AS MONTH4 
                      ,SUM(B.MONTH5)      AS MONTH5 
                      ,SUM(B.MONTH6)      AS MONTH6 
                      ,SUM(B.MONTH7)      AS MONTH7 
                      ,SUM(B.MONTH8)      AS MONTH8 
                      ,SUM(B.MONTH9)      AS MONTH9 
                      ,SUM(B.MONTH10)     AS MONTH10
                      ,SUM(B.MONTH11)     AS MONTH11
                      ,SUM(B.MONTH12)     AS MONTH12
                FROM   TBL_EXP_STORE_MST A
                       JOIN TBL_EXP_STORE_SALES_GOAL B
                           ON  1 = 1
                           AND A.BRAND_ID   = B.BRAND_ID
                           AND A.STORE_ID   = B.STORE_ID
                           
                           <if test=" !'ALL'.equals(region) ">
                               AND    A.REGION =  #{region} 
                           </if>
                           <if test=" !'ALL'.equals(store) ">
                               AND    A.STORE_ID = #{store} 
                           </if>
                           <if test=" !'ALL'.equals(supervisor) ">
                               AND    A.SUPERVISOR = #{supervisor} 
                           </if>
                           AND B.YEAR = #{year}
                WHERE  1 = 1
                AND    A.BRAND_ID   =  #{brandId}

                ) A
               ,(
                    /*  매출 */
                    SELECT SUM(B.GROSS_SALES) AS AMOUNT
                    FROM   TBL_EXP_STORE_MST  A /* 매장정보 */
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND B.YEAR       = #{year}
                             AND B.MONTH      = #{month} 
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR = #{supervisor} 
                    </if>

                ) B

    </select>
    
    <select id="getTbRotationRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /*  dashboardCorPerformance.getTbRotationRatio */        
    SELECT ROUND( AVG(NVL(RECEIPT_CNT2, 0)) ,2)  AS TB_ROTATION_GOAL
    FROM   (
            SELECT A.STORE_ID
                  ,A.TB_ROTATION
                  ,A.TB_ROTATION_GOAL
                  ,B.YEAR
                  ,B.MONTH
                  ,SUM(B.RECEIPT_CNT) AS RECEIPT_CNT
                  ,ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2) AS RECEIPT_CNT2
            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                     ON  1 = 1
                     AND A.STORE_ID   = B.STORE_ID
                     AND B.YEAR       = #{year}
                     AND B.MONTH      = #{month} 
                   JOIN (
                            SELECT B.STORE_ID
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,COUNT(1) DAY_CNT
                            FROM   TBL_EXP_STORE_MST A
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID = B.STORE_ID
                                     AND B.YEAR       = #{year}
                                     AND B.MONTH      = #{month} 
                                     AND B.RECEIPT_CNT IS NOT NULL
                                     AND B.RECEIPT_CNT != 0
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            GROUP BY B.STORE_ID
                                    ,B.YEAR
                                    ,B.MONTH
                        ) C
                         ON  1 = 1
                         AND B.STORE_ID   = C.STORE_ID
                         AND B.YEAR       = C.YEAR
                         AND B.MONTH      = C.MONTH
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            AND    A.TB_ROTATION IS NOT NULL
            GROUP BY A.STORE_ID
                    ,A.TB_ROTATION
                    ,A.TB_ROTATION_GOAL
                    ,B.YEAR
                    ,B.MONTH  
           )
    </select> 
    
    <select id="getGrowthRate" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGrowthRate */
        SELECT CASE WHEN MAX(A.AMOUNT1) != 0 AND MAX(A.AMOUNT2) !=  0 THEN ROUND((MAX(A.AMOUNT1)/MAX(A.AMOUNT2)) * 100,2)
                    ELSE 0
               END AS GROWTH_RATE
        FROM   (
                    /* 조회년도 */
                    SELECT SUM(B.GROSS_SALES) AS AMOUNT1
                          ,0                  AS AMOUNT2
                    FROM   TBL_EXP_STORE_MST A
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND B.YEAR       = #{year}
                             AND B.MONTH      = #{month} 
                    WHERE  1 = 1
                    AND    A.BRAND_ID   =  #{brandId}
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR = #{supervisor} 
                    </if>
                    UNION ALL
                    /* 조회 전년도 */
                    SELECT 0                  AS AMOUNT1
                          ,SUM(B.GROSS_SALES) AS AMOUNT2
                    FROM   TBL_EXP_STORE_MST A
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                             AND B.YEAR       = #{previousYear}
                             AND B.MONTH      = #{month} 
                    WHERE  1 = 1
                    AND    A.BRAND_ID   =  #{brandId}
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR = #{supervisor} 
                    </if>
                ) A
    </select>    
        <select id="getGoalAchieveRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGoalAchieveRatioRank */
        SELECT A.BRAND_ID
              ,A.STORE_ID
              ,A.STORE_NM
              ,A.YEAR
              ,A.MONTH
              ,A.GOLE_AMOUNT
              ,A.AMOUNT
              ,A.ACHIEVE_RATIO
        FROM   (
                SELECT A.BRAND_ID
                      ,A.STORE_ID
                      ,A.STORE_NM
                      ,A.YEAR
                      ,A.MONTH
                      ,A.GOLE_AMOUNT
                      ,B.AMOUNT
                      ,CASE WHEN A.GOLE_AMOUNT != 0 THEN ROUND((B.AMOUNT / A.GOLE_AMOUNT) * 100, 2)
                            ELSE NULL
                       END AS ACHIEVE_RATIO
                FROM   (
                            SELECT A.BRAND_ID
                                  ,A.STORE_ID
                                  ,A.STORE_NM
                                  ,B.YEAR
                                  ,#{month} AS MONTH
                                  ,CASE #{month}  WHEN '01'  THEN B.MONTH1
                                                  WHEN '02'  THEN B.MONTH2
                                                  WHEN '03'  THEN B.MONTH3
                                                  WHEN '04'  THEN B.MONTH4
                                                  WHEN '05'  THEN B.MONTH5
                                                  WHEN '06'  THEN B.MONTH6
                                                  WHEN '07'  THEN B.MONTH7
                                                  WHEN '08'  THEN B.MONTH8
                                                  WHEN '09'  THEN B.MONTH9
                                                  WHEN '10'  THEN B.MONTH10
                                                  WHEN '11'  THEN B.MONTH11
                                                  WHEN '12'  THEN B.MONTH12
                                                  ELSE 0
                                    END AS GOLE_AMOUNT
                            FROM   TBL_EXP_STORE_MST A
                                   JOIN TBL_EXP_STORE_SALES_GOAL B
                                       ON  1 = 1
                                       AND A.BRAND_ID   = B.BRAND_ID
                                       AND A.STORE_ID   = B.STORE_ID
                                       AND B.MONTH1     IS NOT NULL
                                       AND B.YEAR       = #{year}
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if>

                        ) A
                        JOIN ( 
                                 /*  매출 */
                                SELECT A.STORE_ID
                                      ,A.STORE_NM
                                      ,B.YEAR
                                      ,B.MONTH
                                      ,SUM(B.GROSS_SALES) AS AMOUNT
                                FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                         ON  1 = 1
                                         AND A.STORE_ID   = B.STORE_ID
                                         AND B.YEAR       = #{year}
                                         AND B.MONTH      = #{month}
                                WHERE  1 = 1
                                AND    A.BRAND_ID   = #{brandId}
                                <if test=" !'ALL'.equals(region) ">
                                    AND    A.REGION =  #{region} 
                                </if>
                                <if test=" !'ALL'.equals(store) ">
                                    AND    A.STORE_ID = #{store} 
                                </if>
                                <if test=" !'ALL'.equals(supervisor) ">
                                    AND    A.SUPERVISOR = #{supervisor} 
                                </if>
                                GROUP BY A.STORE_ID
                                        ,A.STORE_NM
                                        ,B.YEAR
                                        ,B.MONTH

                        ) B
                        ON  1 = 1
                        AND A.STORE_ID   = B.STORE_ID   
                        AND A.YEAR       = B.YEAR     
                        AND A.MONTH      = B.MONTH 
               ) A
        WHERE 1 = 1
        AND   A.ACHIEVE_RATIO IS NOT NULL
        ORDER BY A.ACHIEVE_RATIO DESC
    </select>        
    
        <select id="getGoalAchieveRatioStore" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGoalAchieveRatioStore */
        WITH BASE_TB AS(  

                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '01' AS MONTH , B.MONTH1 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH1 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '02' AS MONTH , B.MONTH2 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH2 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '03' AS MONTH , B.MONTH3 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH3 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '03' AS MONTH , B.MONTH3 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH3 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '04' AS MONTH , B.MONTH4 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH4 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '05' AS MONTH , B.MONTH5 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH5 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '06' AS MONTH , B.MONTH6 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH6 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '07' AS MONTH , B.MONTH7 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH7 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '08' AS MONTH , B.MONTH8 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH8 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '09' AS MONTH , B.MONTH9 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH9 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '10' AS MONTH , B.MONTH10 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH10 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '11' AS MONTH , B.MONTH11 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH11 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '12' AS MONTH , B.MONTH12 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{preYear} AND B.MONTH12 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '01' AS MONTH , B.MONTH1 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH1 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '02' AS MONTH , B.MONTH2 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH2 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '03' AS MONTH , B.MONTH3 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH3 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '03' AS MONTH , B.MONTH3 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH3 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '04' AS MONTH , B.MONTH4 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH4 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '05' AS MONTH , B.MONTH5 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH5 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '06' AS MONTH , B.MONTH6 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH6 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '07' AS MONTH , B.MONTH7 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH7 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '08' AS MONTH , B.MONTH8 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH8 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '09' AS MONTH , B.MONTH9 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH9 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '10' AS MONTH , B.MONTH10 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH10 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '11' AS MONTH , B.MONTH11 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH11 IS NOT NULL
                UNION ALL
                SELECT A.BRAND_ID, A.STORE_ID, A.STORE_NM, B.YEAR, '12' AS MONTH , B.MONTH12 AS SALES_GOAL FROM TBL_EXP_STORE_MST A JOIN TBL_EXP_STORE_SALES_GOAL B ON A.BRAND_ID = B.BRAND_ID AND A.STORE_ID = B.STORE_ID WHERE A.BRAND_ID = #{brandId}  AND A.STORE_ID = #{storeId} AND B.YEAR = #{endYears} AND B.MONTH12 IS NOT NULL
                
        )
       , SALES_TB AS (
             /*  매출 */
            SELECT A.STORE_ID
                  ,A.STORE_NM
                  ,B.YEAR
                  ,B.MONTH
                  ,SUM(B.GROSS_SALES) AS SALES
            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                     ON  1 = 1
                     AND A.STORE_ID   = B.STORE_ID
                     AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')

            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId} 
            AND    A.STORE_ID   = #{storeId}
            GROUP BY A.STORE_ID
                    ,A.STORE_NM
                    ,B.YEAR
                    ,B.MONTH
       )
       SELECT BASE_TB.STORE_ID
             ,SALES_TB.STORE_NM
             ,BASE_TB.YEAR
             ,BASE_TB.MONTH
             ,BASE_TB.YEAR||'-'||BASE_TB.MONTH AS YEAR_MONTH 
             ,BASE_TB.SALES_GOAL
             ,SALES_TB.SALES
             ,ROUND((SALES_TB.SALES/BASE_TB.SALES_GOAL) *100,2) AS GOAL_RATIO

       FROM   BASE_TB
              JOIN SALES_TB
                ON  1 = 1
                AND BASE_TB.STORE_ID = SALES_TB.STORE_ID
                AND BASE_TB.YEAR     = SALES_TB.YEAR
                AND BASE_TB.MONTH    = SALES_TB.MONTH
       WHERE 1 = 1
       ORDER BY BASE_TB.YEAR
               ,BASE_TB.MONTH
        </select>

    <select id="getPreStoreTbRotation" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreStoreTbRotation */
        SELECT A.STORE_ID
              ,A.STORE_NM
              ,A.YEAR
              ,A.MONTH
              ,A.YEAR||'-'||A.MONTH AS YEAR_MONTH
              ,A.THIS_AMOUNT
              ,A.PRE_AMOUNT
              ,ROUND((A.THIS_AMOUNT/A.PRE_AMOUNT) *100, 2) AS AMOUNT_RETIO
        FROM   (
                 SELECT STORE_ID
                       ,STORE_NM
                       ,YEAR
                       ,MONTH
                       ,RECEIPT_CNT AS THIS_AMOUNT
                       ,NVL(LAG(RECEIPT_CNT) OVER (PARTITION BY STORE_ID ORDER BY YEAR, MONTH), 0) AS PRE_AMOUNT
                 FROM (
                        SELECT A.STORE_ID
                              ,A.STORE_NM  
                              ,B.YEAR
                              ,B.MONTH
                              ,B.YEAR||'-'||B.MONTH AS YEAR_MONTH
                              ,SUM(B.RECEIPT_CNT) AS RECEIPT_CNT
                        FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                               JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                 ON  1 = 1
                                 AND A.STORE_ID   = B.STORE_ID
                                 AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                        WHERE  1 = 1
                        AND    A.BRAND_ID   = #{brandId}
                        AND    A.STORE_ID   = #{storeId}
                        AND    A.TB_ROTATION IS NOT NULL
                        GROUP BY A.STORE_ID
                                ,A.STORE_NM
                                ,B.YEAR
                                ,B.MONTH
                 )
               ) A
        WHERE 1 = 1
        AND   A.PRE_AMOUNT != 0
        ORDER BY A.YEAR
                ,A.MONTH
    </select>
    <select id="getStoreTbRotation" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStoreTbRotation */
                SELECT A.STORE_ID
                      ,A.STORE_NM  
                      ,B.YEAR||'-'||B.MONTH AS YEAR_MONTH 
                      ,A.TB_ROTATION
                      ,A.TB_ROTATION_GOAL
                      ,ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2) AS DAY_RECEIPT_CNT
                      ,ROUND((ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2)/A.TB_ROTATION_GOAL) * 100,2)  AS TB_ROTATION_RATIO
                FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                         ON  1 = 1
                         AND A.STORE_ID   = B.STORE_ID
                         AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                       JOIN (
                                SELECT B.STORE_ID
                                      ,B.YEAR
                                      ,B.MONTH
                                      ,COUNT(1) DAY_CNT
                                FROM   TBL_EXP_STORE_MST A
                                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                         ON  1 = 1
                                         AND A.STORE_ID = B.STORE_ID
                                         AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                                         AND B.RECEIPT_CNT IS NOT NULL
                                         AND B.RECEIPT_CNT != 0
                                WHERE  1 = 1
                                AND    A.BRAND_ID   = #{brandId}
                                AND    A.STORE_ID   = #{storeId}
                                GROUP BY B.STORE_ID
                                        ,B.YEAR
                                        ,B.MONTH
                            ) C
                         ON  1 = 1
                         AND B.STORE_ID   = C.STORE_ID
                         AND B.YEAR       = C.YEAR
                         AND B.MONTH      = C.MONTH
                WHERE  1 = 1
                AND    A.BRAND_ID   = #{brandId}
                AND    A.STORE_ID   = #{storeId}
                AND    A.TB_ROTATION IS NOT NULL
                GROUP BY A.STORE_ID
                        ,A.STORE_NM
                        ,A.TB_ROTATION
                        ,A.TB_ROTATION_GOAL
                        ,B.YEAR
                        ,B.MONTH
                ORDER BY B.YEAR
                        ,B.MONTH
    </select> 
    
    <select id="getTbRotationRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getTbRotationRatioRank */
                SELECT A.STORE_ID
                      ,A.STORE_NM 
                      ,A.TB_ROTATION
                      ,A.TB_ROTATION_GOAL
                      ,B.YEAR
                      ,B.MONTH
                      ,ROUND((ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2)/A.TB_ROTATION_GOAL) * 100,2)  AS TB_ROTATION_RATIO
                FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                         ON  1 = 1
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{year}
                         AND B.MONTH      = #{month} 
                       JOIN (
                                SELECT B.STORE_ID
                                      ,B.YEAR
                                      ,B.MONTH
                                      ,COUNT(1) DAY_CNT
                                FROM   TBL_EXP_STORE_MST A
                                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                         ON  1 = 1
                                         AND A.STORE_ID = B.STORE_ID
                                         AND B.YEAR       = #{year}
                                         AND B.MONTH      = #{month} 
                                         AND B.RECEIPT_CNT IS NOT NULL
                                         AND B.RECEIPT_CNT != 0
                                WHERE  1 = 1
                                AND    A.BRAND_ID   = #{brandId}
                                GROUP BY B.STORE_ID
                                        ,B.YEAR
                                        ,B.MONTH
                            ) C
                         ON  1 = 1
                         AND B.STORE_ID   = C.STORE_ID
                         AND B.YEAR       = C.YEAR
                         AND B.MONTH      = C.MONTH
                WHERE  1 = 1
                AND    A.BRAND_ID   = #{brandId}
                AND    A.TB_ROTATION IS NOT NULL
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                GROUP BY A.STORE_ID
                        ,A.STORE_NM
                        ,A.TB_ROTATION
                        ,A.TB_ROTATION_GOAL
                        ,B.YEAR
                        ,B.MONTH
                ORDER BY ROUND((A.TB_ROTATION_GOAL/ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2)) * 100,2) DESC
    </select> 
        
    <select id="getPreMonthTbRotationRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getPreMonthTbRotationRatio */
        SELECT BRAND_ID
              ,TB_ROTATION_RATIO
        FROM   (
            SELECT BRAND_ID
                  ,CASE WHEN SUM(PRE_RECEIPT_CNT) !=  0 THEN  ROUND(SUM(RECEIPT_CNT)/SUM(PRE_RECEIPT_CNT) *100,2)
                        ELSE 0
                   END AS TB_ROTATION_RATIO
            FROM  (
                            /* 당월 */
                            SELECT A.BRAND_ID
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,A.STORE_ID
                                  ,A.STORE_NM 
                                  ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                        ELSE 0
                                   END      AS RECEIPT_CNT
                                  ,0        AS PRE_RECEIPT_CNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{year} 
                                     AND B.MONTH      = #{month} 
                                   JOIN (
                                            
                                            SELECT B.STORE_ID
                                                  ,B.YEAR
                                                  ,B.MONTH
                                                  ,COUNT(1) DAY_CNT
                                            FROM   TBL_EXP_STORE_MST A
                                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                                     ON  1 = 1
                                                     AND A.STORE_ID = B.STORE_ID
                                                     AND B.YEAR       = #{year} 
                                                     AND B.MONTH      = #{month} 
                                                     AND B.RECEIPT_CNT IS NOT NULL
                                                     AND B.RECEIPT_CNT != 0
                                            WHERE  1 = 1
                                            AND    A.BRAND_ID   = #{brandId} 
                                            GROUP BY B.STORE_ID
                                                    ,B.YEAR
                                                    ,B.MONTH
                                        ) C
                                     ON  1 = 1
                                     AND B.STORE_ID   = C.STORE_ID
                                     AND B.YEAR       = C.YEAR
                                     AND B.MONTH      = C.MONTH
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}  
                            GROUP BY A.BRAND_ID
                                    ,B.YEAR
                                    ,B.MONTH
                                    ,A.STORE_ID
                                    ,A.STORE_NM
                            UNION ALL
                            /* 전월 */
                            SELECT A.BRAND_ID
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,A.STORE_ID
                                  ,A.STORE_NM
                                  ,0        AS RECEIPT_CNT 
                                  ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                        ELSE 0
                                   END       AS PRE_RECEIPT_CNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{prevYear}
                                     AND B.MONTH      = #{prevMonth}
                                   JOIN (   
                                            SELECT B.STORE_ID
                                                  ,B.YEAR
                                                  ,B.MONTH
                                                  ,COUNT(1) DAY_CNT
                                            FROM   TBL_EXP_STORE_MST A
                                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                                     ON  1 = 1
                                                     AND A.STORE_ID = B.STORE_ID
                                                     AND B.YEAR       = #{prevYear}
                                                     AND B.MONTH      = #{prevMonth}
                                                     AND B.RECEIPT_CNT IS NOT NULL
                                                     AND B.RECEIPT_CNT != 0
                                            WHERE  1 = 1
                                            AND    A.BRAND_ID   = #{brandId} 
                                            GROUP BY B.STORE_ID
                                                    ,B.YEAR
                                                    ,B.MONTH
                                        ) C
                                     ON  1 = 1
                                     AND B.STORE_ID   = C.STORE_ID
                                     AND B.YEAR       = C.YEAR
                                     AND B.MONTH      = C.MONTH
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId} 
                            GROUP BY A.BRAND_ID
                                    ,B.YEAR
                                    ,B.MONTH
                                    ,A.STORE_ID
                                    ,A.STORE_NM
            )
             GROUP BY BRAND_ID
        )
    </select>    
    
    <!-- 전월대비 달성률 -->
    <select id="getPreMonthAchieveRatioStore" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreMonthAchieveRatioStore */
        SELECT A.STORE_ID
              ,A.STORE_NM
              ,A.YEAR
              ,A.MONTH
              ,A.YEAR||'-'||LPAD(A.MONTH, 2, '0') AS YEAR_MONTH
              ,A.THIS_AMOUNT
              ,A.PRE_AMOUNT
              ,ROUND((A.THIS_AMOUNT/A.PRE_AMOUNT) *100, 2) AS AMOUNT_RETIO
        FROM   (
                 SELECT STORE_ID
                       ,STORE_NM
                       ,YEAR
                       ,MONTH
                       ,THIS_AMOUNT
                       ,NVL(LAG(THIS_AMOUNT) OVER (PARTITION BY STORE_ID ORDER BY YEAR, MONTH), 0) AS PRE_AMOUNT
                 FROM (
                        SELECT  A.STORE_ID
                               ,A.STORE_NM
                               ,B.YEAR
                               ,B.MONTH
                               ,SUM(B.GROSS_SALES) AS THIS_AMOUNT
                        FROM 
                            TBL_EXP_STORE_MST A
                            JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                               ON  A.STORE_ID = B.STORE_ID
                               AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                        WHERE A.BRAND_ID = #{brandId}
		                <if test=" region != null and !'ALL'.equals(region) ">
		                    AND    A.REGION =  #{region} 
		                </if>
		                <if test=" storeId != null and !'ALL'.equals(storeId) ">
		                    AND    A.STORE_ID = #{storeId} 
		                </if>
		                <if test=" supervisor != null and !'ALL'.equals(supervisor) ">
		                    AND    A.SUPERVISOR = #{supervisor} 
		                </if>
                        GROUP BY A.STORE_ID
                                ,A.STORE_NM
                                ,B.YEAR
                                ,B.MONTH
                 )
               ) A
        WHERE 1 = 1
        AND   A.PRE_AMOUNT != 0
    </select>
    
    <select id="getPreMonthAchieveRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreMonthAchieveRatioRank */
        SELECT A.STORE_ID
              ,A.STORE_NM
              ,A.PRE_MONTH_ACHIEVE_RATIO
        FROM   (
                SELECT A.STORE_ID
                      ,A.STORE_NM
                      ,SUM(A.AMOUNT)     AS AMOUNT
                      ,SUM(A.PRE_AMOUNT) AS PRE_AMOUNT
                      ,CASE WHEN SUM(A.PRE_AMOUNT) !=  0 THEN ROUND( (SUM(A.AMOUNT)/SUM(A.PRE_AMOUNT)) * 100 ,2)
                            ELSE 0
                       END AS PRE_MONTH_ACHIEVE_RATIO
                FROM   (
                             /*  당월 */
                            SELECT A.STORE_ID
                                  ,A.STORE_NM
                                  ,SUM(B.GROSS_SALES) AS AMOUNT
                                  ,0                  AS PRE_AMOUNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{year} 
                                     AND B.MONTH      = #{month} 
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if> 
                            GROUP BY A.STORE_ID
                                    ,A.STORE_NM
                            UNION ALL 
                             /*  전월 */
                            SELECT A.STORE_ID
                                  ,A.STORE_NM
                                  ,0                  AS AMOUNT
                                  ,SUM(B.GROSS_SALES) AS PRE_AMOUNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{prevYear}
                                     AND B.MONTH      = #{prevMonth}
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if> 
                            GROUP BY A.STORE_ID
                                    ,A.STORE_NM
                ) A
                GROUP BY A.STORE_ID
                        ,A.STORE_NM   
        ) A
        ORDER BY A.PRE_MONTH_ACHIEVE_RATIO DESC
    </select> 
    
    <select id="getPreMonthTbRotationRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getPreMonthTbRotationRatioRank */
        SELECT BRAND_ID
              ,STORE_ID
              ,STORE_NM
              ,TB_ROTATION_RATIO
        FROM   (
            SELECT BRAND_ID
                  ,STORE_ID
                  ,STORE_NM
                  ,CASE WHEN SUM(PRE_RECEIPT_CNT) !=  0 THEN  ROUND(SUM(RECEIPT_CNT)/SUM(PRE_RECEIPT_CNT) *100,2)
                        ELSE 0
                   END AS TB_ROTATION_RATIO
            FROM  (
                            /* 당월 */
                            SELECT A.BRAND_ID
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,A.STORE_ID
                                  ,A.STORE_NM 
                                  ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                        ELSE 0
                                   END      AS RECEIPT_CNT
                                  ,0        AS PRE_RECEIPT_CNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{year} 
                                     AND B.MONTH      = #{month} 
                                   JOIN (
                                            
                                            SELECT B.STORE_ID
                                                  ,B.YEAR
                                                  ,B.MONTH
                                                  ,COUNT(1) DAY_CNT
                                            FROM   TBL_EXP_STORE_MST A
                                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                                     ON  1 = 1
                                                     AND A.STORE_ID = B.STORE_ID
                                                     AND B.YEAR       = #{year}
                                                     AND B.MONTH      = #{month} 
                                                     AND B.RECEIPT_CNT IS NOT NULL
                                                     AND B.RECEIPT_CNT != 0
                                            WHERE  1 = 1
                                            AND    A.BRAND_ID   = #{brandId}
                                            GROUP BY B.STORE_ID
                                                    ,B.YEAR
                                                    ,B.MONTH
                                        ) C
                                     ON  1 = 1
                                     AND B.STORE_ID   = C.STORE_ID
                                     AND B.YEAR       = C.YEAR
                                     AND B.MONTH      = C.MONTH
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            GROUP BY A.BRAND_ID
                                    ,B.YEAR
                                    ,B.MONTH
                                    ,A.STORE_ID
                                    ,A.STORE_NM
                            UNION ALL
                            /* 전월 */
                            SELECT A.BRAND_ID
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,A.STORE_ID
                                  ,A.STORE_NM
                                  ,0        AS RECEIPT_CNT 
                                  ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                        ELSE 0
                                   END       AS PRE_RECEIPT_CNT
                            FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                     ON  1 = 1
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.YEAR       = #{prevYear}
                                     AND B.MONTH      = #{prevMonth} 
                                   JOIN (   
                                            SELECT B.STORE_ID
                                                  ,B.YEAR
                                                  ,B.MONTH
                                                  ,COUNT(1) DAY_CNT
                                            FROM   TBL_EXP_STORE_MST A
                                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                                     ON  1 = 1
                                                     AND A.STORE_ID = B.STORE_ID
                                                     AND B.YEAR       = #{prevYear}
                                                     AND B.MONTH      = #{prevMonth}
                                                     AND B.RECEIPT_CNT IS NOT NULL
                                                     AND B.RECEIPT_CNT != 0
                                            WHERE  1 = 1
                                            AND    A.BRAND_ID   = #{brandId}
                                            GROUP BY B.STORE_ID
                                                    ,B.YEAR
                                                    ,B.MONTH
                                        ) C
                                     ON  1 = 1
                                     AND B.STORE_ID   = C.STORE_ID
                                     AND B.YEAR       = C.YEAR
                                     AND B.MONTH      = C.MONTH
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = #{brandId}
                            GROUP BY A.BRAND_ID
                                    ,B.YEAR
                                    ,B.MONTH
                                    ,A.STORE_ID
                                    ,A.STORE_NM
            )
             GROUP BY BRAND_ID
                     ,STORE_ID
                     ,STORE_NM
        )
         ORDER BY TB_ROTATION_RATIO DESC
    </select> 
    
        <select id="SalesAndGoalSalesChartList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.SalesAndGoalSalesChartList */
        SELECT A.BRAND_ID
              ,A.STORE_ID
              ,A.STORE_NM
             , ROUND(SUM(A.GOAL_MONTH)/10000) AS GOAL_MONTH
             , ROUND(SUM(A.SALES_MONTH)/10000) AS SALES_MONTH
        FROM   (
                SELECT A.BRAND_ID
                      ,A.STORE_ID
                      ,B.STORE_NM
                      ,A.YEAR
                      ,A.MONTH
                      ,A.YYYY_MM_DD
                      ,A.GOAL_MONTH
                      ,A.SALES_MONTH
                FROM   (

                        WITH STORE AS (
                                       SELECT  A.BRAND_ID    
                                              ,A.STORE_ID      
                                              ,A.YEAR          
                                              ,NVL(A.MONTH1, 0) AS GOAL_MONTH1
                                              ,B.MONTH01        AS SALES_MONTH1
                                              ,NVL(A.MONTH2 ,0) AS GOAL_MONTH2
                                              ,B.MONTH02        AS SALES_MONTH2 
                                              ,NVL(A.MONTH3 ,0) AS GOAL_MONTH3
                                              ,B.MONTH03        AS SALES_MONTH3 
                                              ,NVL(A.MONTH4 ,0) AS GOAL_MONTH4
                                              ,B.MONTH04        AS SALES_MONTH4 
                                              ,NVL(A.MONTH5 ,0) AS GOAL_MONTH5
                                              ,B.MONTH05        AS SALES_MONTH5 
                                              ,NVL(A.MONTH6 ,0) AS GOAL_MONTH6
                                              ,B.MONTH06        AS SALES_MONTH6 
                                              ,NVL(A.MONTH7 ,0) AS GOAL_MONTH7
                                              ,B.MONTH07        AS SALES_MONTH7 
                                              ,NVL(A.MONTH8 ,0) AS GOAL_MONTH8
                                              ,B.MONTH08        AS SALES_MONTH8 
                                              ,NVL(A.MONTH9 ,0) AS GOAL_MONTH9
                                              ,B.MONTH09        AS SALES_MONTH9 
                                              ,NVL(A.MONTH10,0) AS GOAL_MONTH10
                                              ,B.MONTH10        AS SALES_MONTH10
                                              ,NVL(A.MONTH11,0) AS GOAL_MONTH11
                                              ,B.MONTH11        AS SALES_MONTH11
                                              ,NVL(A.MONTH12,0) AS GOAL_MONTH12
                                              ,B.MONTH12        AS SALES_MONTH12
                                       FROM   TBL_EXP_STORE_SALES_GOAL A
                                              JOIN (
                                                        /*=========================================================================================*/
                                                        SELECT  BRAND_ID
                                                               ,STORE_ID
                                                               ,YEAR
                                                               ,SUM(MONTH01) AS MONTH01
                                                               ,SUM(MONTH02) AS MONTH02
                                                               ,SUM(MONTH03) AS MONTH03
                                                               ,SUM(MONTH04) AS MONTH04
                                                               ,SUM(MONTH05) AS MONTH05
                                                               ,SUM(MONTH06) AS MONTH06
                                                               ,SUM(MONTH07) AS MONTH07
                                                               ,SUM(MONTH08) AS MONTH08
                                                               ,SUM(MONTH09) AS MONTH09
                                                               ,SUM(MONTH10) AS MONTH10
                                                               ,SUM(MONTH11) AS MONTH11
                                                               ,SUM(MONTH12) AS MONTH12
                                                        FROM   (        
                                                                    SELECT  A.BRAND_ID
                                                                           ,A.STORE_ID
                                                                           ,B.YEAR
                                                                           ,B.MONTH
                                                                           ,CASE MONTH WHEN '01'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH01
                                                                           ,CASE MONTH WHEN '02'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH02
                                                                           ,CASE MONTH WHEN '03'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH03
                                                                           ,CASE MONTH WHEN '04'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH04
                                                                           ,CASE MONTH WHEN '05'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH05
                                                                           ,CASE MONTH WHEN '06'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH06
                                                                           ,CASE MONTH WHEN '07'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH07
                                                                           ,CASE MONTH WHEN '08'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH08
                                                                           ,CASE MONTH WHEN '09'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH09
                                                                           ,CASE MONTH WHEN '10'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH10
                                                                           ,CASE MONTH WHEN '11'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH11
                                                                           ,CASE MONTH WHEN '12'  THEN SUM(B.NET_SALES)  ELSE 0 END AS MONTH12
                                                                    FROM   TBL_EXP_STORE_MST A
                                                                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                                                                             ON  1 = 1
                                                                             AND A.STORE_ID   = B.STORE_ID
                                                                             AND B.YEAR       = #{year}
                                                                    WHERE  1 = 1
                                                                    AND    A.BRAND_ID    = #{brandId}
                                                                    <if test=" !'ALL'.equals(region) ">
                                                                        AND    A.REGION =  #{region} 
                                                                    </if>
                                                                    <if test=" !'ALL'.equals(store) ">
                                                                        AND    A.STORE_ID = #{store} 
                                                                    </if>
                                                                    <if test=" !'ALL'.equals(supervisor) ">
                                                                        AND    A.SUPERVISOR = #{supervisor} 
                                                                    </if>
                                                                    GROUP BY A.BRAND_ID
                                                                            ,A.STORE_ID
                                                                            ,B.YEAR
                                                                            ,B.MONTH
                                                        ) A
                                                        GROUP BY A.BRAND_ID
                                                                ,A.STORE_ID
                                                                ,A.YEAR
                                                       /*=========================================================================================*/
                                                   ) B
                                                ON  1 = 1
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                AND A.YEAR       = B.YEAR
                                       WHERE  1 = 1
                                       AND    A.YEAR      = #{year}
                                       AND    A.BRAND_ID  = #{brandId}
                        )
                        SELECT A.BRAND_ID
                              ,A.STORE_ID
                              ,TO_CHAR(A.YEAR)        AS YEAR
                              ,TO_CHAR(A.MONTH, '09') AS MONTH
                              ,TO_DATE(TO_CHAR(A.YEAR)||'-'||TO_CHAR(A.MONTH, '09')||'-'||'01', 'YYYY-MM-DD') AS YYYY_MM_DD
                              ,A.GOAL_MONTH
                              ,A.SALES_MONTH
                        FROM   (
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  1  AS MONTH, STORE.GOAL_MONTH1  AS  GOAL_MONTH,  STORE.SALES_MONTH1  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  2  AS MONTH, STORE.GOAL_MONTH2  AS  GOAL_MONTH,  STORE.SALES_MONTH2  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  3  AS MONTH, STORE.GOAL_MONTH3  AS  GOAL_MONTH,  STORE.SALES_MONTH3  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  4  AS MONTH, STORE.GOAL_MONTH4  AS  GOAL_MONTH,  STORE.SALES_MONTH4  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  5  AS MONTH, STORE.GOAL_MONTH5  AS  GOAL_MONTH,  STORE.SALES_MONTH5  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  6  AS MONTH, STORE.GOAL_MONTH6  AS  GOAL_MONTH,  STORE.SALES_MONTH6  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  7  AS MONTH, STORE.GOAL_MONTH7  AS  GOAL_MONTH,  STORE.SALES_MONTH7  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  8  AS MONTH, STORE.GOAL_MONTH8  AS  GOAL_MONTH,  STORE.SALES_MONTH8  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  9  AS MONTH, STORE.GOAL_MONTH9  AS  GOAL_MONTH,  STORE.SALES_MONTH9  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  10 AS MONTH, STORE.GOAL_MONTH10 AS  GOAL_MONTH,  STORE.SALES_MONTH10 AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  11 AS MONTH, STORE.GOAL_MONTH11 AS  GOAL_MONTH,  STORE.SALES_MONTH11 AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.BRAND_ID, STORE.STORE_ID,YEAR,  12 AS MONTH, STORE.GOAL_MONTH12 AS  GOAL_MONTH,  STORE.SALES_MONTH12 AS SALES_MONTH FROM STORE
                               ) A
                        ORDER BY BRAND_ID, STORE_ID,YEAR, MONTH
                       ) A
                       JOIN TBL_EXP_STORE_MST B
                         ON  1 = 1
                         AND B.BRAND_ID    = #{brandId}
                         AND A.BRAND_ID    = B.BRAND_ID
                         AND A.STORE_ID    = B.STORE_ID
                WHERE  1 = 1
                AND    TO_CHAR(A.YYYY_MM_DD, 'YYYY-MM-DD') = #{startDate}
               ) A
        GROUP BY A.BRAND_ID
                ,A.STORE_ID     
                ,A.STORE_NM  
        ORDER BY SALES_MONTH DESC
    </select> 
    
    <select id="SalesAndPreMonthSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /*  dashboardCorPerformance.SalesAndPreMonthSales */
    SELECT A.BRAND_ID
          ,A.STORE_ID
          ,A.STORE_NM
          ,ROUND(SUM(A.NET_SALES)/10000)    AS NET_SALES
          ,ROUND(SUM(A.NET_SALES_PRE)/10000) AS NET_SALES_PRE
    FROM   (
                SELECT  A.BRAND_ID
                       ,A.STORE_ID
                       ,A.STORE_NM
                       ,SUM(B.NET_SALES) AS NET_SALES
                       ,0                AS NET_SALES_PRE
                 FROM   TBL_EXP_STORE_MST A
                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                         ON  1 = 1
                         AND A.STORE_ID = B.STORE_ID
                         AND B.YEAR       = #{year}
                         AND B.MONTH      = #{month}
                WHERE  1 = 1
                AND    A.BRAND_ID    = #{brandId}
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                GROUP BY  A.BRAND_ID
                         ,A.STORE_ID
                         ,A.STORE_NM
                UNION ALL
                SELECT  A.BRAND_ID
                       ,A.STORE_ID
                       ,A.STORE_NM
                       ,0                AS NET_SALES
                       ,SUM(B.NET_SALES) AS NET_SALES_PRE
                 FROM   TBL_EXP_STORE_MST A
                       JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                         ON  1 = 1
                         AND A.STORE_ID = B.STORE_ID
                         AND B.YEAR       = #{prevYear}
                         AND B.MONTH      = #{prevMonth}
                WHERE  1 = 1
                AND    A.BRAND_ID    = #{brandId}
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                GROUP BY  A.BRAND_ID
                         ,A.STORE_ID
                         ,A.STORE_NM

    ) A
    GROUP BY  A.BRAND_ID
             ,A.STORE_ID
             ,A.STORE_NM
    </select>
    
    <select id="getWeekList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getWeekList */
        WITH ISO AS(    
        SELECT TO_CHAR(WEEK_START, 'YYYY-MM-DD') AS WEEK_START        
              ,TO_CHAR(WEEK_END, 'YYYY-MM-DD')   AS WEEK_END        
              ,TO_CHAR(WEEK_START, 'WW')         AS WEEK_OF_YEAR_ISO        
              ,TO_CHAR(WEEK_START, 'W')          AS WEEK_OF_MONTH    
        FROM   (        
                  SELECT    TRUNC(START_DT + LEVEL, 'D') WEEK_START            
                           ,TRUNC(START_DT + LEVEL, 'D') + 6 WEEK_END        
                  FROM     (            
                              SELECT  TO_DATE( #{weekStart} , 'YYYYMMDD') - 1 START_DT                
                                     ,TO_DATE( #{weekEnd} , 'YYYYMMDD') END_DT            
                              FROM DUAL        
                            )        
                  CONNECT BY LEVEL <![CDATA[ <= ]]> END_DT - START_DT    
               )    
        GROUP BY WEEK_START, WEEK_END    
        ORDER BY WEEK_START
        )
        SELECT  ROWNUM AS WEEK_OF_YEAR
                ,A.WEEK_START 
                ,A.WEEK_END 
                ,A.WEEK_START||' ~ '||A.WEEK_END AS START_END
                ,A.WEEK_START||'_'||A.WEEK_END AS START_END_VAL
                ,A.WEEK_OF_YEAR_ISO 
                ,A.WEEK_OF_MONTH 
        FROM ISO A   
        WHERE 1 = 1
        AND   A.WEEK_START <![CDATA[ <= ]]> TO_CHAR(GET_KRDT(SYSDATE), 'YYYY-MM-DD')   
        ORDER BY A.WEEK_START DESC
    </select>
    
    <select id="getSalesByWeek" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getSalesByWeek */
        WITH BASE_TB AS(    
                    SELECT A.BRAND_ID
                          ,A.STORE_ID
                          ,A.STORE_NM
                          ,TO_CHAR(B.YEAR) AS YEAR 
                          ,TO_CHAR(B.MONTH) AS MONTH
                          ,TO_CHAR(LPAD(B.DAY, 2, '0')) AS DAY 
                          ,TO_DATE(TO_CHAR(B.YEAR)||TO_CHAR(B.MONTH)||TO_CHAR(LPAD(B.DAY, 2, '0')), 'YYYYMMDD') AS STR_DATE
                          ,B.NET_SALES
                          ,B.RECEIPT_CNT
                    FROM   TBL_EXP_STORE_MST  A/* 매장정보 */
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST B
                             ON  1 = 1
                             AND A.STORE_ID   = B.STORE_ID
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                        AND    A.SUPERVISOR = #{supervisor} 
                    </if>
                    ORDER BY A.BRAND_ID
                            ,A.STORE_ID
                            ,B.YEAR
                            ,B.MONTH
                            ,B.DAY
                   )
        SELECT A.BRAND_ID
              ,A.STR_DATE     
              ,TO_CHAR(TO_DATE(A.STR_DATE     , 'YYYY-MM-DD HH24:MI:SS') -7, 'YYYY-MM-DD')  AS PRE_STR_DATE
              ,A.NET_SALES      
              ,A.RECEIPT_CNT    
              ,A.PRE_NET_SALES  
              ,A.PRE_RECEIPT_CNT
        FROM   (
                SELECT A.BRAND_ID
                      ,A.STR_DATE             AS STR_DATE
                      ,ROUND(SUM(A.NET_SALES)/10000)       AS NET_SALES
                      ,SUM(A.RECEIPT_CNT)                  AS RECEIPT_CNT
                      ,ROUND(SUM(A.PRE_NET_SALES)/10000)   AS PRE_NET_SALES
                      ,SUM(A.PRE_RECEIPT_CNT)              AS PRE_RECEIPT_CNT
                FROM   (
                        /*조회 주차*/
                        SELECT  BASE_TB.BRAND_ID
                               ,BASE_TB.STORE_ID
                               ,BASE_TB.STORE_NM
                               ,TO_CHAR(BASE_TB.STR_DATE,'YYYY-MM-DD') AS STR_DATE
                               ,NET_SALES   AS NET_SALES
                               ,RECEIPT_CNT AS RECEIPT_CNT
                               ,0           AS PRE_NET_SALES
                               ,0           AS PRE_RECEIPT_CNT
                        FROM    BASE_TB
                        WHERE   1 = 1
                        AND     BASE_TB.STR_DATE BETWEEN TO_DATE( #{dateStart} , 'YYYY-MM-DD') AND TO_DATE( #{dateEnd} , 'YYYY-MM-DD')
                        UNION ALL
                        /*조회 전주차*/
                        SELECT  BASE_TB.BRAND_ID
                               ,BASE_TB.STORE_ID
                               ,BASE_TB.STORE_NM
                               ,TO_CHAR(STR_DATE+7,'YYYY-MM-DD') AS STR_DATE
                               ,0           AS NET_SALES
                               ,0           AS RECEIPT_CNT
                               ,NET_SALES   AS PRE_NET_SALES
                               ,RECEIPT_CNT AS PRE_RECEIPT_CNT
                        FROM    BASE_TB
                        WHERE   1 = 1
                        AND     BASE_TB.STR_DATE BETWEEN TO_DATE( #{startDatePre} , 'YYYY-MM-DD') AND TO_DATE( #{endDatePre} , 'YYYY-MM-DD')
                        ) A
                GROUP BY A.BRAND_ID
                        ,A.STR_DATE         
                ORDER BY A.BRAND_ID
                        ,A.STR_DATE    
               ) A  
    </select>
    
    <!-- 메뉴조회 -->
    <select id="getMenuList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuList */
        SELECT  BRAND_ID 
               ,BRAND_MENU_ID AS MENU_ID   
               ,BRAND_MENU_CD AS MENU_CD
               ,MENU_NM     
               ,GROUP_1     
               ,GROUP_2     
               ,UPDATE_USER 
               ,UPDATE_DATE 
        FROM   TBL_EXP_BRAND_MENU_MASTER
        WHERE  1 = 1
        <if test=" !'ALL'.equals(brandId) and brandId != null and brandId != ''  ">
            AND   BRAND_ID  = #{brandId}
        </if>
        <if test=" !'ALL'.equals(menuId) and menuId != null and menuId != ''  ">
            AND   BRAND_MENU_ID  = #{menuId}
        </if>
        <if test=" menuNm != null and menuNm != ''  ">
            AND   MENU_NM  LIKE '%'||#{menuNm}||'%'
        </if>
        <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
            AND   GROUP_1  = #{group1}
        </if>
        <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
            AND   GROUP_2  = #{group2}
        </if>
        ORDER BY MENU_NM
    </select>

    <select id="getmenuSalesMonthTop5_bak" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuSalesMonthTop5 */
                WITH TOP5_MENU AS (
                    /* 매출상위 5개 메뉴 */
                    SELECT  BRAND_ID
                           ,BRAND_MENU_CD
                    FROM   (
                            SELECT A.BRAND_ID
                                  ,B.BRAND_MENU_CD
                                  ,SUM(D.SALES) AS SALES
                            FROM   TBL_EXP_STORE_MST A
                                   JOIN TBL_EXP_BRAND_MENU_MASTER B
                                     ON   1 = 1
                                     AND  A.BRAND_ID = B.BRAND_ID
        
                                         AND B.BRAND_MENU_CD  IN  
                                          (  
                                                 'obong_MN0022'
                                          , 
                                                 'obong_MN0038'
                                          , 
                                                 'obong_MN0033'
                                          , 
                                                 'obong_MN0029'
                                          , 
                                                 'obong_MN0039'
                                          , 
                                                 'obong_MN0025'
                                          , 
                                                 'obong_MN0009'
                                          , 
                                                 'obong_MN0040'
                                          , 
                                                 'obong_MN0026'
                                          , 
                                                 'obong_MN0008'
                                          , 
                                                 'obong_MN0027'
                                          , 
                                                 'obong_MN0050'
                                          , 
                                                 'obong_MN0041'
                                          , 
                                                 'obong_MN0042'
                                          , 
                                                 'obong_MN0043'
                                          , 
                                                 'obong_MN0044'
                                          , 
                                                 'obong_MN0045'
                                          , 
                                                 'obong_MN0007'
                                          , 
                                                 'obong_MN0005'
                                          , 
                                                 'obong_MN0006'
                                          , 
                                                 'obong_MN0046'
                                          , 
                                                 'obong_MN0024'
                                          , 
                                                 'obong_MN0047'
                                          , 
                                                 'obong_MN0011'
                                          , 
                                                 'obong_MN0034'
                                          , 
                                                 'obong_MN0048'
                                          , 
                                                 'obong_MN0049'
                                          , 
                                                 'obong_MN0001'
                                          , 
                                                 'obong_MN0002'
                                          , 
                                                 'obong_MN0010'
                                          , 
                                                 'obong_MN0031'
                                          , 
                                                 'obong_MN0012'
                                          , 
                                                 'obong_MN0023'
                                          , 
                                                 'obong_MN0016'
                                          , 
                                                 'obong_MN0015'
                                          , 
                                                 'obong_MN0013'
                                          , 
                                                 'obong_MN0014'
                                          , 
                                                 'obong_MN0028'
                                          , 
                                                 'obong_MN0017'
                                          )   
        
                                   JOIN TBL_EXP_STORE_MENU_MST C
                                     ON   1 = 1
                                     AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                                     AND  A.STORE_ID      = C.STORE_ID
                                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                                     ON   1 = 1
                                     AND  C.MENU_ID = D.MENU_ID
                                     AND  D.YEAR  =  '2025'
        
                            WHERE  1 = 1
                            AND    A.BRAND_ID   = 'obong'
        
                            GROUP BY A.BRAND_ID
                                    ,B.BRAND_MENU_CD
                            ORDER BY SUM(D.SALES) DESC
                           )
                    WHERE  1 =1 
                    AND    ROWNUM  <![CDATA[<=]]>  5
                )
               , MONTH_MENU AS (
                    /* 월별 메뉴 매출 */
        
                    SELECT A.BRAND_ID
                          ,B.BRAND_MENU_CD
                          ,B.MENU_NM
                          ,D.YEAR
                          ,D.MONTH
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
        
                                  AND B.BRAND_MENU_CD  IN  
                                   (  
                                          'obong_MN0022'
                                   , 
                                          'obong_MN0038'
                                   , 
                                          'obong_MN0033'
                                   , 
                                          'obong_MN0029'
                                   , 
                                          'obong_MN0039'
                                   , 
                                          'obong_MN0025'
                                   , 
                                          'obong_MN0009'
                                   , 
                                          'obong_MN0040'
                                   , 
                                          'obong_MN0026'
                                   , 
                                          'obong_MN0008'
                                   , 
                                          'obong_MN0027'
                                   , 
                                          'obong_MN0050'
                                   , 
                                          'obong_MN0041'
                                   , 
                                          'obong_MN0042'
                                   , 
                                          'obong_MN0043'
                                   , 
                                          'obong_MN0044'
                                   , 
                                          'obong_MN0045'
                                   , 
                                          'obong_MN0007'
                                   , 
                                          'obong_MN0005'
                                   , 
                                          'obong_MN0006'
                                   , 
                                          'obong_MN0046'
                                   , 
                                          'obong_MN0024'
                                   , 
                                          'obong_MN0047'
                                   , 
                                          'obong_MN0011'
                                   , 
                                          'obong_MN0034'
                                   , 
                                          'obong_MN0048'
                                   , 
                                          'obong_MN0049'
                                   , 
                                          'obong_MN0001'
                                   , 
                                          'obong_MN0002'
                                   , 
                                          'obong_MN0010'
                                   , 
                                          'obong_MN0031'
                                   , 
                                          'obong_MN0012'
                                   , 
                                          'obong_MN0023'
                                   , 
                                          'obong_MN0016'
                                   , 
                                          'obong_MN0015'
                                   , 
                                          'obong_MN0013'
                                   , 
                                          'obong_MN0014'
                                   , 
                                          'obong_MN0028'
                                   , 
                                          'obong_MN0017'
                                   )   
        
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             AND  D.YEAR  =  '2025'
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = 'obong'
        
                    GROUP BY A.BRAND_ID
                            ,B.BRAND_MENU_CD
                            ,B.MENU_NM
                            ,D.YEAR
                            ,D.MONTH
                     ORDER BY  D.MONTH
                              ,SUM(D.SALES)  DESC
                )
               , UNMAPPING_MENU AS (
                    /* 월별 메뉴 매출 */
                    SELECT A.BRAND_ID
                          ,NVL(D.BRAND_MENU_CD,'obong_MN9999') AS BRAND_MENU_CD
                          ,NVL(D.MENU_NM,'미지정') AS MENU_NM
                          ,C.YEAR
                          ,C.MONTH
                          ,SUM(C.SALES)  AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_STORE_MENU_MST B
                             ON   1 = 1
                             AND  A.STORE_ID      = B.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                             ON   1 = 1
                             AND  B.MENU_ID = C.MENU_ID
                             AND  C.YEAR  =  '2025'
                           LEFT OUTER JOIN TBL_EXP_BRAND_MENU_MASTER D
                             ON   1 = 1
                             AND  A.BRAND_ID = D.BRAND_ID  
                             AND  B.BRAND_MENU_CD = D.BRAND_MENU_CD
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = 'obong'
        
                    AND    D.BRAND_MENU_CD   IS NULL
                    GROUP BY A.BRAND_ID
                            ,D.BRAND_MENU_CD
                            ,D.MENU_NM
                            ,C.YEAR
                            ,C.MONTH
                    ORDER BY  C.MONTH
                             ,SUM(C.SALES)  DESC
                )
                SELECT A.BRAND_ID
                      ,A.BRAND_MENU_CD
                      ,A.MENU_NM
                      ,A.MONTH
                      ,A.SALES
                FROM   (
                    SELECT A.BRAND_ID
                          ,A.BRAND_MENU_CD
                          ,A.MENU_NM
                          ,A.MONTH
                          ,ROUND(A.SALES/10000) AS SALES
                    FROM   MONTH_MENU A
                           JOIN TOP5_MENU B
                             ON  1 = 1
                             AND A.BRAND_ID        = B.BRAND_ID
                             AND A.BRAND_MENU_CD   = B.BRAND_MENU_CD
                    UNION ALL
                    SELECT A.BRAND_ID
                          ,A.BRAND_MENU_CD
                          ,A.MENU_NM
                          ,A.MONTH
                          ,ROUND(A.SALES/10000) AS SALES
                    FROM   UNMAPPING_MENU A
                ) A
                WHERE 1 = 1
        
                ORDER BY A.MONTH
                        ,A.SALES DESC
    </select>

    <select id="getmenuSalesMonthTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuSalesMonthTop5 */
        WITH TOP5_MENU AS (
            /* 매출상위 5개 메뉴 */
            SELECT  BRAND_ID
                   ,BRAND_MENU_CD
            FROM   (
                    SELECT A.BRAND_ID
                          ,B.BRAND_MENU_CD
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                 AND B.GROUP_1  = #{group1}
                             </if>
                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                 AND B.GROUP_2  = #{group2}
                             </if>   
                             <if test=" menu != null and !menu.equals('') ">
                                 AND B.BRAND_MENU_CD  IN  
                                 <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                         #{menu_cd.val}
                                 </foreach>  
                             </if>
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             AND  D.YEAR  =  #{year}
                             
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                        AND    A.STORE_ID   = #{store}
                    </if>
                    <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                        AND    A.REGION   = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                        AND    A.SUPERVISOR   = #{supervisor}
                    </if>
                    GROUP BY A.BRAND_ID
                            ,B.BRAND_MENU_CD
                    ORDER BY SUM(D.SALES) DESC
                   )
            WHERE  1 =1 
            AND    ROWNUM <![CDATA[<=]]> 5
        )
       , MONTH_MENU AS (
            /* 월별 메뉴 매출 */
            
            SELECT A.BRAND_ID
                  ,B.BRAND_MENU_CD
                  ,B.MENU_NM
                  ,D.YEAR
                  ,D.MONTH
                  ,SUM(D.SALES) AS SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN TBL_EXP_BRAND_MENU_MASTER B
                     ON   1 = 1
                     AND  A.BRAND_ID = B.BRAND_ID
                     <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                         AND B.GROUP_1  = #{group1}
                     </if>
                     <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                         AND B.GROUP_2  = #{group2}
                     </if>
                     <if test=" menu != null and !menu.equals('') ">
                          AND B.BRAND_MENU_CD  IN  
                          <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                  #{menu_cd.val}
                          </foreach>  
                      </if>
                   JOIN TBL_EXP_STORE_MENU_MST C
                     ON   1 = 1
                     AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                     AND  A.STORE_ID      = C.STORE_ID
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                     ON   1 = 1
                     AND  C.MENU_ID = D.MENU_ID
                     AND  D.YEAR  =  #{year}
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                AND    A.STORE_ID   = #{store}
            </if>
            <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                AND    A.REGION   = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                AND    A.SUPERVISOR   = #{supervisor}
            </if>
            GROUP BY A.BRAND_ID
                    ,B.BRAND_MENU_CD
                    ,B.MENU_NM
                    ,D.YEAR
                    ,D.MONTH
             ORDER BY  D.MONTH
                      ,SUM(D.SALES)  DESC
        )
       , UNMAPPING_MENU AS (
            /* 월별 메뉴 매출 */
            SELECT A.BRAND_ID
                  ,NVL(D.BRAND_MENU_CD,'obong_MN9999') AS BRAND_MENU_CD
                  ,NVL(D.MENU_NM,'미지정') AS MENU_NM
                  ,C.YEAR
                  ,C.MONTH
                  ,SUM(C.SALES)  AS SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN TBL_EXP_STORE_MENU_MST B
                     ON   1 = 1
                     AND  A.STORE_ID      = B.STORE_ID
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                     ON   1 = 1
                     AND  B.MENU_ID = C.MENU_ID
                     AND  C.YEAR  =  #{year}
                   LEFT OUTER JOIN TBL_EXP_BRAND_MENU_MASTER D
                     ON   1 = 1
                     AND  A.BRAND_ID = D.BRAND_ID  
                     AND  B.BRAND_MENU_CD = D.BRAND_MENU_CD
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                AND    A.STORE_ID   = #{store}
            </if>
            <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                AND    A.REGION   = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                AND    A.SUPERVISOR   = #{supervisor}
            </if>
            AND    D.BRAND_MENU_CD   IS NULL
            GROUP BY A.BRAND_ID
                    ,D.BRAND_MENU_CD
                    ,D.MENU_NM
                    ,C.YEAR
                    ,C.MONTH
            ORDER BY  C.MONTH
                     ,SUM(C.SALES)  DESC
        )
        SELECT A.BRAND_ID
              ,A.BRAND_MENU_CD
              ,A.MENU_NM
              ,A.MONTH
              ,A.SALES
        FROM   (
            SELECT A.BRAND_ID
                  ,A.BRAND_MENU_CD
                  ,A.MENU_NM
                  ,A.MONTH
                  ,ROUND(A.SALES/10000) AS SALES
            FROM   MONTH_MENU A
                   JOIN TOP5_MENU B
                     ON  1 = 1
                     AND A.BRAND_ID        = B.BRAND_ID
                     AND A.BRAND_MENU_CD   = B.BRAND_MENU_CD
            UNION ALL
            SELECT A.BRAND_ID
                  ,A.BRAND_MENU_CD
                  ,A.MENU_NM
                  ,A.MONTH
                  ,ROUND(A.SALES/10000) AS SALES
            FROM   UNMAPPING_MENU A
        ) A
        WHERE 1 = 1
        <if test=' "N".equals(unMappingMenu) or unMappingMenu == "N" '>
            AND   A.BRAND_MENU_CD != 'obong_MN9999'
        </if>
        ORDER BY A.MONTH
                ,A.SALES DESC
    </select>

    <select id="getmenuSalesDayTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuSalesDayTop5 */
        WITH TOP5_MENU AS (
            SELECT  BRAND_ID
                   ,MONTH
                   ,BRAND_MENU_CD
            FROM   (
                    /* 매출상위 5개 메뉴 */
                    SELECT A.BRAND_ID
                          ,B.BRAND_MENU_CD
                          ,D.MONTH
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                 AND B.GROUP_1  = #{group1}
                             </if>
                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                 AND B.GROUP_2  = #{group2}
                             </if>
                             <if test=" menu != null and !menu.equals('') ">
                                 AND B.BRAND_MENU_CD  IN  
                                 <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                         #{menu_cd.val}
                                 </foreach>  
                             </if>
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             AND  D.YEAR     = #{year}
                             AND  D.MONTH    = #{month}

                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                        AND    A.STORE_ID   = #{store}
                    </if>
                    <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                        AND    A.REGION   = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                        AND    A.SUPERVISOR   = #{supervisor}
                    </if>
                    GROUP BY A.BRAND_ID
                            ,B.BRAND_MENU_CD
                            ,D.MONTH
                    ORDER BY SUM(D.SALES) DESC
            )
            WHERE  1 =1 
            AND    ROWNUM  <![CDATA[<=]]>  5
        )
       , DAY_MENU AS (
                     /* 월별 메뉴 매출 */
                    SELECT A.BRAND_ID
                          ,B.BRAND_MENU_CD
                          ,B.MENU_NM
                          ,D.YEAR
                          ,D.MONTH
                          ,D.DAY
                          ,SUM(D.SALES) AS SALES
                    FROM   TBL_EXP_STORE_MST A
                           JOIN TBL_EXP_BRAND_MENU_MASTER B
                             ON   1 = 1
                             AND  A.BRAND_ID = B.BRAND_ID
                           JOIN TBL_EXP_STORE_MENU_MST C
                             ON   1 = 1
                             AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                             AND  A.STORE_ID      = C.STORE_ID
                           JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                             ON   1 = 1
                             AND  C.MENU_ID = D.MENU_ID
                             <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                 AND D.YEAR   = #{year}
                             </if>
                             <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                 AND D.MONTH   = #{month}
                             </if>
                    WHERE  1 = 1
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                        AND    A.STORE_ID   = #{store}
                    </if>
                    <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                        AND    A.REGION   = #{region}
                    </if>
                    <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                        AND    A.SUPERVISOR   = #{supervisor}
                    </if>
                    GROUP BY A.BRAND_ID
                            ,B.BRAND_MENU_CD
                            ,B.MENU_NM
                            ,D.YEAR
                            ,D.MONTH
                            ,D.DAY
                     ORDER BY  D.MONTH
                              ,D.DAY
                              ,SUM(D.SALES)  DESC
       )
       , UNMAPPING_MENU AS (
            /* 일별 메뉴 매출 */
            SELECT A.BRAND_ID
                  ,NVL(D.BRAND_MENU_CD,'obong_MN9999') AS BRAND_MENU_CD
                  ,NVL(D.MENU_NM,'미지정') AS MENU_NM
                  ,C.YEAR
                  ,C.MONTH
                  ,C.DAY
                  ,SUM(C.SALES)  AS SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN TBL_EXP_STORE_MENU_MST B
                     ON   1 = 1
                     AND  A.STORE_ID      = B.STORE_ID
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                     ON   1 = 1
                     AND  B.MENU_ID = C.MENU_ID
                     AND  C.YEAR  =  #{year}
                     <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                         AND C.YEAR   = #{year}
                     </if>
                     <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                         AND C.MONTH   = #{month}
                     </if>
                   LEFT OUTER JOIN TBL_EXP_BRAND_MENU_MASTER D
                     ON   1 = 1
                     AND  A.BRAND_ID = D.BRAND_ID  
                     AND  B.BRAND_MENU_CD = D.BRAND_MENU_CD
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                AND    A.STORE_ID   = #{store}
            </if>
            <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                AND    A.REGION   = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                AND    A.SUPERVISOR   = #{supervisor}
            </if>
            AND    D.BRAND_MENU_CD   IS NULL
            GROUP BY A.BRAND_ID
                    ,D.BRAND_MENU_CD
                    ,D.MENU_NM
                    ,C.YEAR
                    ,C.MONTH
                    ,C.DAY
            ORDER BY  C.MONTH
                     ,C.DAY
                     ,SUM(C.SALES)  DESC
        )
        
        SELECT A.BRAND_ID
              ,A.BRAND_MENU_CD
              ,A.MENU_NM
              ,A.MONTH
              ,A.DAY
              ,A.SALES
        FROM   (
            SELECT A.BRAND_ID
                  ,A.BRAND_MENU_CD
                  ,A.MENU_NM
                  ,A.MONTH
                  ,A.DAY
                  ,ROUND(A.SALES/10000) AS SALES
            FROM   DAY_MENU A
                   JOIN TOP5_MENU B
                     ON  1 = 1
                     AND A.BRAND_ID        = B.BRAND_ID
                     AND A.BRAND_MENU_CD   = B.BRAND_MENU_CD
            UNION ALL
            SELECT A.BRAND_ID
                  ,A.BRAND_MENU_CD
                  ,A.MENU_NM
                  ,A.MONTH
                  ,A.DAY
                  ,ROUND(A.SALES/10000) AS SALES
            FROM   UNMAPPING_MENU A
        ) A
        WHERE 1 = 1
        <if test=' "N".equals(unMappingMenu) or unMappingMenu == "N" '>
            AND   A.BRAND_MENU_CD != 'obong_MN9999'
        </if>
        ORDER BY A.MONTH 
                ,A.DAY
                ,A.SALES DESC
    </select>  
      
    <select id="getMenuGrp1SalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuGrp1SalesRanking */
        WITH BASE_TABLE AS (
            SELECT A.BRAND_ID
                  ,B.GROUP_1
                  ,GET_BRAND_CODE_NM(#{brandId},'STORE_MENU_GROUP1',B.GROUP_1) AS GROUP_1_NM
                  ,ROUND(SUM(D.SALES)/10000) AS SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN TBL_EXP_BRAND_MENU_MASTER B
                     ON   1 = 1
                     AND  A.BRAND_ID = B.BRAND_ID
                     <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                         AND B.GROUP_1  = #{group1}
                     </if>
                     <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                         AND B.GROUP_2  = #{group2}
                     </if>
                     <if test=" menu != null and !menu.equals('') ">
                         AND B.BRAND_MENU_CD  IN  
                         <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                 #{menu_cd.val}
                         </foreach>  
                     </if>
                   JOIN TBL_EXP_STORE_MENU_MST C
                     ON   1 = 1
                     AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                     AND  A.STORE_ID      = C.STORE_ID
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                     ON   1 = 1
                     AND  C.MENU_ID = D.MENU_ID
                     <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                         AND D.YEAR   = #{year}
                     </if>
                     <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                         AND D.MONTH   = #{month}
                     </if>
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                AND    A.STORE_ID   = #{store}
            </if>
            <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                AND    A.REGION   = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                AND    A.SUPERVISOR   = #{supervisor}
            </if>
            GROUP BY A.BRAND_ID
                    ,B.GROUP_1
        )
       ,UNMAPPIN_MENU AS (
            SELECT 'obong' AS BRAND_ID
                   ,'99' AS GROUP_1
                   ,'미지정' AS GROUP_1_NM
                   ,ROUND(SUM(A.SALES)/10000) AS SALES
            FROM   (
                       SELECT A.BRAND_ID
                             ,B.BRAND_MENU_CD
                             ,NVL(D.GROUP_1,'99')    AS GROUP_1
                             ,NVL(GET_BRAND_CODE_NM('obong','STORE_MENU_GROUP1',D.GROUP_1),'미지정') AS GROUP_1_NM
                             ,C.SALES  AS SALES
                       FROM   TBL_EXP_STORE_MST A
                              JOIN TBL_EXP_STORE_MENU_MST B
                                ON   1 = 1
                                AND  A.STORE_ID      = B.STORE_ID
                              JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                                ON   1 = 1
                                AND  B.MENU_ID = C.MENU_ID
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND C.YEAR   = #{year}
                                </if>
                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                    AND C.MONTH   = #{month}
                                </if>
                              LEFT OUTER JOIN TBL_EXP_BRAND_MENU_MASTER D
                                ON   1 = 1
                                AND  A.BRAND_ID = D.BRAND_ID  
                                AND  B.BRAND_MENU_CD = D.BRAND_MENU_CD
                                <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                    AND B.GROUP_1  = #{group1}
                                </if>
                                <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                    AND B.GROUP_2  = #{group2}
                                </if>
                                <if test=" menu != null and !menu.equals('') ">
                                    AND B.BRAND_MENU_CD  IN  
                                    <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                            #{menu_cd.val}
                                    </foreach>  
                                </if>
                       WHERE  1 = 1
                       AND    A.BRAND_ID   = #{brandId}
                       <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                           AND    A.STORE_ID   = #{store}
                       </if>
                       <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                           AND    A.REGION   = #{region}
                       </if>
                       <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                           AND    A.SUPERVISOR   = #{supervisor}
                       </if>
                       AND    B.BRAND_MENU_CD IS NULL
                   ) A
            WHERE  1 = 1
        )
        SELECT  A.BRAND_ID
               ,A.GROUP_1
               ,A.GROUP_1_NM
               ,A.SALES
        FROM   (
                SELECT BRAND_ID
                      ,GROUP_1
                      ,GROUP_1_NM
                      ,SALES
                FROM   BASE_TABLE
                UNION ALL
                SELECT BRAND_ID
                      ,GROUP_1
                      ,GROUP_1_NM
                      ,SALES
                FROM   UNMAPPIN_MENU 
        ) A
        WHERE 1 = 1
        <if test=' "N".equals(unMappingMenu) or unMappingMenu == "N" '>
            AND   A.GROUP_1 != '99'
        </if>        
        ORDER BY A.SALES DESC
    </select>
    
    <select id="getMenuSalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuSalesRanking */
        WITH BASE_TABLE AS (
            SELECT B.BRAND_MENU_CD
                  ,B.MENU_NM
                  ,ROUND(SUM(D.SALES)/10000) AS SALES
            FROM   TBL_EXP_STORE_MST A
                   JOIN TBL_EXP_BRAND_MENU_MASTER B
                     ON   1 = 1
                     AND  A.BRAND_ID = B.BRAND_ID
                     <if test=" menu != null and !menu.equals('') ">
                         AND B.BRAND_MENU_CD  IN  
                         <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                 #{menu_cd.val}
                         </foreach>  
                     </if>
                   JOIN TBL_EXP_STORE_MENU_MST C
                     ON   1 = 1
                     AND  B.BRAND_MENU_CD = C.BRAND_MENU_CD
                     AND  A.STORE_ID      = C.STORE_ID
                   JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST D
                     ON   1 = 1
                     AND  C.MENU_ID = D.MENU_ID
                     <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                         AND D.YEAR   = #{year}
                     </if>
                     <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                         AND D.MONTH  = #{month}
                     </if>
            WHERE  1 = 1
            AND    A.BRAND_ID   = #{brandId}
            <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                AND    A.STORE_ID   = #{store}
            </if>
            <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                AND    A.REGION   = #{region}
            </if>
            <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                AND    A.SUPERVISOR   = #{supervisor}
            </if>
            GROUP BY B.BRAND_MENU_CD
                    ,B.MENU_NM
        )
       ,UNMAPPIN_MENU AS (
            SELECT  A.BRAND_MENU_CD
                   ,A.MENU_NM
                   ,ROUND(SUM(A.SALES)/10000) AS SALES
            FROM   (
                       SELECT D.BRAND_MENU_CD
                             ,'미지정'  AS MENU_NM
                             ,C.SALES  AS SALES
                       FROM   TBL_EXP_STORE_MST A
                              JOIN TBL_EXP_STORE_MENU_MST B
                                ON   1 = 1
                                AND  A.STORE_ID      = B.STORE_ID
                              JOIN ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST C
                                ON   1 = 1
                                AND  B.MENU_ID = C.MENU_ID
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND C.YEAR   = #{year}
                                </if>
                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                    AND C.MONTH  = #{month}
                                </if>
                              LEFT OUTER JOIN TBL_EXP_BRAND_MENU_MASTER D
                                ON   1 = 1
                                AND  A.BRAND_ID = D.BRAND_ID  
                                AND  B.BRAND_MENU_CD = D.BRAND_MENU_CD
                       WHERE  1 = 1
                       AND    A.BRAND_ID   = #{brandId}
                       <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                           AND    A.STORE_ID   = #{store}
                       </if>
                       <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                           AND    A.REGION   = #{region}
                       </if>
                       <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                           AND    A.SUPERVISOR   = #{supervisor}
                       </if>
                       AND    B.BRAND_MENU_CD IS NULL
                   ) A
            WHERE  1 = 1
            GROUP BY A.BRAND_MENU_CD
                    ,A.MENU_NM
        )
        SELECT  A.MENU_NM
               ,A.SALES
        FROM   (
                SELECT MENU_NM     
                      ,SALES       
                FROM   BASE_TABLE
                UNION ALL
                SELECT MENU_NM     
                      ,SALES 
                FROM   UNMAPPIN_MENU 
        ) A
        WHERE 1 = 1
        <if test=' "N".equals(unMappingMenu) or unMappingMenu == "N" '>
            AND   A.MENU_NM != '미지정'
        </if>
        ORDER BY A.SALES DESC
    </select>

    <select id="getOpenCloseCntSummary" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getOpenCloseCntSummary */
        SELECT SUM(ALL_CNT) - SUM(CLOSE_CNT) AS OPEN_CNT
        FROM   (
	                SELECT COUNT(1) AS ALL_CNT
	                     , 0        AS CLOSE_CNT
	                FROM TBL_EXP_STORE_MST 
	                WHERE 1 = 1 
	                AND   BRAND_ID   = #{brandId}
	              <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
	                AND   REGION   = #{region}
	              </if>
	              <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
	                AND   SUPERVISOR   = #{supervisor}
	              </if>
					AND (
						OPENING_DAY <![CDATA[<]]> TO_DATE(#{endDate}, 'YYYY-MM-DD')
						OR
						OPENING_DAY IS NULL
					)
	                UNION ALL
	                SELECT 0        AS ALL_CNT 
	                      ,COUNT(1) AS CLOSE_CNT 
	                FROM TBL_EXP_STORE_MST 
	                WHERE 1 = 1 
	                AND   BRAND_ID   = #{brandId}
	              <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
	                AND   REGION   = #{region}
	              </if>
	              <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
	                AND   SUPERVISOR   = #{supervisor}
	              </if>
					AND CLOSING_DATE <![CDATA[<]]> TO_DATE(#{endDate}, 'YYYY-MM-DD')
                )
    </select>
    
        <select id="getOpenCloseCnt" resultType="java.util.HashMap" flushCache="true"  useCache="false"> 
            /*  dashboardCorPerformance.getOpenCloseCnt */
			WITH CountBefore AS (
			    SELECT COUNT(*) AS total_count
			    FROM TBL_EXP_STORE_MST
			    WHERE 1=1
			    	AND BRAND_ID = #{brandId} 
			    	
			    	AND		(
				        (
				            OPENING_DAY IS NULL
				            OR TO_CHAR(OPENING_DAY, 'YYYY-MM') <![CDATA[<=]]> #{seartDate}
				        )
				        OR (
				            CLOSING_DATE IS NULL
				            AND OPENING_DAY IS NULL
				        )
				   )
		          <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
		            AND   REGION   = #{region}
		          </if>
		          <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
		            AND   SUPERVISOR   = #{supervisor}
		          </if>
			),
			CountAfter AS (
			    SELECT COUNT(*) AS after_count
			    FROM TBL_EXP_STORE_MST
			    WHERE 	BRAND_ID = #{brandId} 
			    	AND TO_CHAR(CLOSING_DATE, 'YYYY-MM') <![CDATA[<=]]> #{seartDate}
		          <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
		            AND   REGION   = #{region}
		          </if>
		          <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
		            AND   SUPERVISOR   = #{supervisor}
		          </if>
			)
            SELECT 'OPEN'  AS TYPE, COUNT(1) AS CNT 
            FROM   TBL_EXP_STORE_MST 
            WHERE  1 = 1
            AND    BRAND_ID   = #{brandId}
            AND    TO_CHAR( OPENING_DAY,  'YYYY-MM') = #{seartDate}
          <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
            AND   REGION   = #{region}
          </if>
          <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
            AND   SUPERVISOR   = #{supervisor}
          </if>
            UNION ALL
            SELECT 'CLOSE' AS TYPE, COUNT(1) AS CNT 
            FROM   TBL_EXP_STORE_MST 
            WHERE  1 = 1
            AND    BRAND_ID   = #{brandId}
            AND    TO_CHAR( CLOSING_DATE, 'YYYY-MM') = #{seartDate} 
          <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
            AND   REGION   = #{region}
          </if>
          <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
            AND   SUPERVISOR   = #{supervisor}
          </if>
            UNION ALL 
			SELECT
			    'ALL'   AS TYPE, (SELECT total_count FROM CountBefore) - (SELECT after_count FROM CountAfter) AS CNT
			FROM dual
    </select>
    
    <select id="getRegionCnt" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getRegionCnt */
        SELECT REGION
              ,NVL(REGION_NM,'없음') AS  REGION_NM
              ,CNT 
        FROM   (
                SELECT REGION
                      ,GET_BRAND_CODE_NM(#{brandId} , 'STORE_REGION', REGION) AS REGION_NM
                      ,COUNT(1) AS CNT 
                FROM TBL_EXP_STORE_MST 
                WHERE 1 = 1
                AND   BRAND_ID   = #{brandId}
                AND CLOSING_DATE IS  NULL
                GROUP BY REGION
                )
        ORDER BY CNT DESC 
    </select>
    
        <select id="getStockMstExist" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStockMstExist */
        SELECT CASE WHEN EXISTS (
                                SELECT 1
                                FROM   TBL_EXP_STOCK_MST
                                WHERE  1 = 1
                                AND    STORE_ID   = #{storeId}
                                AND    BRAND_ID   = #{brandId}
                                AND    PRODUCT_CD = #{productCd}
                           ) 
               THEN 'Y'
               ELSE 'N'
           END AS EXIST
        FROM DUAL
    </select>
    
    <!-- 매출 예측 -->
    <select id="getPredictSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getPredictSales */
        WITH TABLE_BASE AS (
                SELECT DISTINCT TAB1.STORE_ID
                      ,TAB1.YEAR
                      ,TAB1.MONTH
                      ,ROUND(TAB1.SUBJECT_001) AS SUBJECT_001
                      ,ROUND(TAB2.SUBJECT_002) AS SUBJECT_002
                      ,ROUND(TAB3.SUBJECT_005) AS SUBJECT_005
                FROM   (
                        SELECT  STORE_ID
                               ,AMOUNT AS SUBJECT_001
                               ,YEAR
                               ,MONTH
                               ,PREDICT_METHOD
                               ,BASE_DATE
                        FROM    TBL_EXP_STORE_FINANCIAL_PREDICT
                        WHERE   BRAND_ID = #{brandId} 
                        AND     SUBJECT = 'SUBJECT_001'
                        AND     PREDICT_METHOD = 'MONTHLY_START'
                        AND     TO_DATE(YEAR || '-' || LPAD(MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                       ) TAB1,
                       (
                       SELECT   STORE_ID
                               ,AMOUNT AS SUBJECT_002
                               ,YEAR
                               ,MONTH
                               ,PREDICT_METHOD
                               ,BASE_DATE
                       FROM     TBL_EXP_STORE_FINANCIAL_PREDICT
                       WHERE    BRAND_ID = #{brandId} 
                       AND      SUBJECT = 'SUBJECT_002'
                       AND      PREDICT_METHOD = 'MONTHLY_START'
                       AND      TO_DATE(YEAR || '-' || LPAD(MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                       ) TAB2,
                       (
                       SELECT   STORE_ID
                               ,AMOUNT AS SUBJECT_005
                               ,YEAR
                               ,MONTH
                               ,PREDICT_METHOD
                               ,BASE_DATE
                       FROM     TBL_EXP_STORE_FINANCIAL_PREDICT
                       WHERE    BRAND_ID = #{brandId} 
                       AND      SUBJECT = 'SUBJECT_005'
                       AND      PREDICT_METHOD = 'MONTHLY_START'
                       AND      TO_DATE(YEAR || '-' || LPAD(MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                       ) TAB3
                WHERE  TAB1.STORE_ID = TAB2.STORE_ID
                AND    TAB1.YEAR     = TAB2.YEAR
                AND    TAB1.MONTH    = TAB2.MONTH
                AND    TAB1.STORE_ID = TAB3.STORE_ID
                AND    TAB1.YEAR     = TAB3.YEAR
                AND    TAB1.MONTH    = TAB3.MONTH
        )
        SELECT  TABLE_BASE.YEAR
               ,TABLE_BASE.MONTH
               ,TABLE_BASE.YEAR||'-'||TABLE_BASE.MONTH AS YEAR_MONTH
               ,ROUND(SUM(TABLE_BASE.SUBJECT_001)/10000) AS SUBJECT_001
               ,ROUND(SUM(TABLE_BASE.SUBJECT_002)/10000) AS SUBJECT_002
               ,ROUND(SUM(TABLE_BASE.SUBJECT_005)/10000) AS SUBJECT_005
        FROM   TABLE_BASE
               JOIN TBL_EXP_STORE_MST A
                 ON  1 = 1
                 AND TABLE_BASE.STORE_ID = A.STORE_ID
                <if test=" !'ALL'.equals(region) ">
                    AND A.REGION   = #{region}
                    <if test=" !'ALL'.equals(store) ">
                        AND A.STORE_ID = #{store}
                    </if>
                </if> 
                <if test=" 'ALL'.equals(region) ">
                    <if test=" !'ALL'.equals(store) ">
                        AND A.STORE_ID = #{store}
                    </if>
                </if>
        WHERE  1 = 1
        GROUP BY TABLE_BASE.YEAR
                ,TABLE_BASE.MONTH
        ORDER BY TABLE_BASE.YEAR
                ,TABLE_BASE.MONTH
    </select>
    <!-- 매출 예측 -->
    <select id="getPredictSales_BAK" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getPredictSales */
        SELECT   A.BRAND_ID,
                <if test=" !'ALL'.equals(region) ">
                    A.REGION,
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_ID,
                        A.STORE_NM,
                    </if>
                </if> 
                <if test=" 'ALL'.equals(region) ">
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_ID,
                        A.STORE_NM,
                    </if>
                </if>
                A.YEAR,
                A.MONTH,
                A.YEAR_MONTH,
                SUM(A.SUBJECT_001) AS SUBJECT_001,
                SUM(A.SUBJECT_002) AS SUBJECT_002,
                SUM(A.SUBJECT_005) AS SUBJECT_005
        FROM   (
                SELECT  A.BRAND_ID,
                        A.REGION,
                        A.STORE_ID,
                        A.STORE_NM,
                        B.YEAR,
                        LPAD(B.MONTH, 2, '0') AS MONTH,
                        B.YEAR||'-'||LPAD(B.MONTH, 2, '0') AS YEAR_MONTH,
                        CASE WHEN B.SUBJECT = 'SUBJECT_001' THEN ROUND(B.AMOUNT) ELSE 0 END AS SUBJECT_001,
                        CASE WHEN B.SUBJECT = 'SUBJECT_002' THEN ROUND(B.AMOUNT) ELSE 0 END AS SUBJECT_002,
                        CASE WHEN B.SUBJECT = 'SUBJECT_005' THEN ROUND(B.AMOUNT) ELSE 0 END AS SUBJECT_005
                FROM    TBL_EXP_STORE_MST A
                        JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                          ON A.BRAND_ID = B.BRAND_ID
                         AND A.STORE_ID = B.STORE_ID
                         AND B.SUBJECT IN ('SUBJECT_001', 'SUBJECT_002', 'SUBJECT_005')
                         AND B.PREDICT_METHOD = 'MONTHLY_START'
                         AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                WHERE   A.BRAND_ID   = #{brandId} 
                <if test=" !'ALL'.equals(region) ">
                      AND   A.REGION     = #{region}
                      <if test=" !'ALL'.equals(store) ">
                          AND   A.STORE_ID   = #{store}
                      </if>
                  </if>  
                  <if test=" 'ALL'.equals(region) ">
                      <if test=" !'ALL'.equals(store) ">
                          AND   A.STORE_ID   = #{store}
                      </if>
                  </if> 
               ) A
        GROUP BY A.BRAND_ID,
                <if test=" !'ALL'.equals(region) ">
                    A.REGION,
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_ID,
                        A.STORE_NM,
                    </if>
                </if>
                <if test=" 'ALL'.equals(region) ">
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_ID,
                        A.STORE_NM,
                    </if>
                </if>
                A.YEAR,
                A.MONTH,
                A.YEAR_MONTH
        ORDER BY A.BRAND_ID,
                <if test=" !'ALL'.equals(region) ">
                    A.REGION,
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_NM,
                    </if>
                </if>
                <if test=" 'ALL'.equals(region) ">
                    <if test=" !'ALL'.equals(store) ">
                        A.STORE_NM,
                    </if>
                </if> 
                 A.YEAR,
                 A.MONTH
    </select>

        <select id="getmenuMarginMonthTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginMonthTop5 */
        WITH BASE_TABLE AS (      
              SELECT 
                   YEAR
                  ,MONTH
                  ,BRAND_MENU_CD
                  ,MENU_NM
                  ,SUM(SALES)          AS SALES    /* 매출 */
                  ,SUM(MCOST)          AS MCOST    /* 원가 */
                  ,SUM(SALES - MCOST)  AS MARGIN   /* 마진*/
              FROM (
                  SELECT 
                       YEAR
                      ,MONTH
                      ,UP.BRAND_MENU_CD
                      ,UP.MENU_NM
                      ,SALES
                      ,ROUND(SALES * UP.UNIT_PRICE_RATE       / 100) AS MCOST /* UNIT_PRICE_RATE 원가율*/
                  FROM 
                       (
	                      SELECT 
							 A.BRAND_MENU_CD
							,A.MENU_NM       	
							,A.COST_PRICE    	
							,A.SELLING_PRICE 	
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE))                               AS CONVERSION_UNIT_PRICE
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE) / A.SELLING_PRICE * 1000) / 10 AS UNIT_PRICE_RATE
	                      FROM 
							 TBL_EXP_BRAND_MENU_MASTER		A
							,TBL_EXP_MENU_RECIPE			B
							,VIEW_RECIPE_PRICE				C
	                      WHERE 1=1
	                          <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
	                               AND A.GROUP_1  = #{group1}
	                          </if>
	                          <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
	                               AND A.GROUP_2  = #{group2}
	                          </if>
                              <if test=" menu != null and !menu.equals('') ">
                                  AND B.BRAND_MENU_CD  IN  
                                  <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                          #{menu_cd.val}
                                  </foreach>  
                              </if>
								AND A.BRAND_MENU_ID		= B.BRAND_MENU_ID(+)
								AND B.RECIPE_CD			= C.RECIPE_CD(+)
		                        AND A.BRAND_ID           = #{brandId}
	                      GROUP BY 
	                           A.BRAND_ID         
	                          ,A.BRAND_MENU_CD
							  ,A.COST_PRICE    	
	                          ,A.MENU_NM
	                          ,A.SELLING_PRICE  
                       )UP
                      ,(
                          SELECT 
                               B.YEAR
                              ,B.MONTH
                              ,D.BRAND_MENU_CD
                              ,D.MENU_NM
                              ,SUM(SALES) AS SALES
                          FROM TBL_EXP_STORE_MST            A
                              ,${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST B
                              ,TBL_EXP_STORE_MENU_MST       C
                              ,TBL_EXP_BRAND_MENU_MASTER    D
                          WHERE 1=1
                              AND A.BRAND_ID      = #{brandId}
                              AND A.BRAND_ID      = B.BRAND_ID
                              AND A.STORE_ID      = B.STORE_ID
                              AND B.STORE_ID      = C.STORE_ID
                              AND B.YEAR          = #{year}
                              AND B.MENU_CD       = C.MENU_CD
                              AND C.BRAND_MENU_CD = D.BRAND_MENU_CD(+)
                          GROUP BY 
                              B.YEAR, B.MONTH, D.BRAND_MENU_CD, D.MENU_NM
                          ORDER BY 
                              B.YEAR, B.MONTH
                       )SL
                  WHERE 
                      UP.BRAND_MENU_CD = SL.BRAND_MENU_CD
              )        
              GROUP BY
                   BRAND_MENU_CD
                  ,MENU_NM
                  ,YEAR
                  ,MONTH
              ORDER BY BRAND_MENU_CD, MENU_NM, YEAR, MONTH    
        ),
        TOP5_MENUS AS   (
              /* 판매 마진 기준으로 상위 5개의 메뉴를 선택 */
              SELECT BRAND_MENU_CD
                    ,MENU_NM
                    ,SUM(SALES) AS TOTAL_MARGIN
              FROM   BASE_TABLE
              GROUP BY BRAND_MENU_CD,  MENU_NM
              ORDER BY TOTAL_MARGIN DESC
              FETCH FIRST 5 ROWS ONLY
        )
        SELECT T.BRAND_MENU_CD 
              ,T.MENU_NM
              ,B.MONTH
              ,ROUND(B.SALES/10000) AS SALES
              ,ROUND(T.TOTAL_MARGIN/10000) AS TOTAL_MARGIN
        FROM TOP5_MENUS T
             JOIN BASE_TABLE B
              ON  1 = 1
              AND T.BRAND_MENU_CD = B.BRAND_MENU_CD
        ORDER BY B.MONTH
               , T.TOTAL_MARGIN DESC
 
    </select>
        <select id="getmenuMarginMonthTop5_1" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginMonthTop5 */
        WITH BASE_TABLE AS (      
              SELECT 
                   YEAR
                  ,MONTH
                  ,BRAND_MENU_CD
                  ,MENU_NM
                  ,SUM(SALES)          AS SALES    /* 매출 */
                  ,SUM(MCOST)          AS MCOST    /* 원가 */
                  ,SUM(SALES - MCOST)  AS MARGIN   /* 마진*/
              FROM (
                  SELECT 
                       YEAR
                      ,MONTH
                      ,UP.BRAND_MENU_CD
                      ,UP.MENU_NM
                      ,SALES
                      ,ROUND(SALES * UP.UNIT_PRICE_RATE       / 100) AS MCOST /* UNIT_PRICE_RATE 원가율*/
                  FROM 
                       (
	                      SELECT 
							 A.BRAND_MENU_CD
							,A.MENU_NM       	
							,A.COST_PRICE    	
							,A.SELLING_PRICE 	
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE))                               AS CONVERSION_UNIT_PRICE
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE) / A.SELLING_PRICE * 1000) / 10 AS UNIT_PRICE_RATE
	                      FROM 
							 TBL_EXP_BRAND_MENU_MASTER		A
							,TBL_EXP_MENU_RECIPE			B
							,VIEW_RECIPE_PRICE				C
	                      WHERE 1=1
	                          <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
	                               AND A.GROUP_1  = #{group1}
	                          </if>
	                          <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
	                               AND A.GROUP_2  = #{group2}
	                          </if>
                              <if test=" menu != null and !menu.equals('') ">
                                  AND B.BRAND_MENU_CD  IN  
                                  <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                          #{menu_cd.val}
                                  </foreach>  
                              </if>
								AND A.BRAND_MENU_ID		= B.BRAND_MENU_ID(+)
								AND B.RECIPE_CD			= C.RECIPE_CD(+)
		                        AND A.BRAND_ID           = #{brandId}
	                      GROUP BY 
	                           A.BRAND_ID         
	                          ,A.BRAND_MENU_CD
							  ,A.COST_PRICE    	
	                          ,A.MENU_NM
	                          ,A.SELLING_PRICE  
                       )UP
                      ,(
                          SELECT 
                               B.YEAR
                              ,B.MONTH
                              ,D.BRAND_MENU_CD
                              ,D.MENU_NM
                              ,SUM(SALES) AS SALES
                          FROM TBL_EXP_STORE_MST            A
                              ,${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST B
                              ,TBL_EXP_STORE_MENU_MST       C
                              ,TBL_EXP_BRAND_MENU_MASTER    D
                          WHERE 1=1
                              <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                AND    A.STORE_ID   = #{store}
                              </if>
                              <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                AND    A.REGION   = #{region}
                              </if>
                              <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                AND    A.SUPERVISOR   = #{supervisor}
                              </if>
                              AND A.BRAND_ID      = #{brandId} 
                              AND A.BRAND_ID      = B.BRAND_ID
                              AND B.STORE_ID      = C.STORE_ID
                              AND B.YEAR          = #{year}
                              AND B.MENU_CD       = C.MENU_CD
                              AND C.BRAND_MENU_CD = D.BRAND_MENU_CD(+)
                          GROUP BY 
                              B.YEAR, B.MONTH, D.BRAND_MENU_CD, D.MENU_NM
                          ORDER BY 
                              B.YEAR, B.MONTH
                       )SL
                  WHERE 
                      UP.BRAND_MENU_CD = SL.BRAND_MENU_CD
              )        
              GROUP BY
                   BRAND_MENU_CD
                  ,MENU_NM
                  ,YEAR
                  ,MONTH
              ORDER BY BRAND_MENU_CD, MENU_NM, YEAR, MONTH    
        ),
        TOP5_MENUS AS   (
              /* 판매 마진 기준으로 상위 5개의 메뉴를 선택 */
              SELECT BRAND_MENU_CD
                    ,MENU_NM
                    ,SUM(SALES) AS TOTAL_MARGIN
              FROM   BASE_TABLE
              GROUP BY BRAND_MENU_CD,  MENU_NM
              ORDER BY TOTAL_MARGIN DESC
              FETCH FIRST 5 ROWS ONLY
        )
        SELECT T.BRAND_MENU_CD
              ,T.MENU_NM
              ,B.MONTH
              ,B.SALES AS SALES
              ,T.TOTAL_MARGIN
        FROM TOP5_MENUS T
             JOIN BASE_TABLE B
              ON  1 = 1
              AND T.BRAND_MENU_CD = B.BRAND_MENU_CD
        ORDER BY B.MONTH
               , T.TOTAL_MARGIN DESC
    </select>

    
        <select id="getmenuMarginMonthTop5_bak" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginMonthTop5 */
        WITH BASE_TABLE AS (
                            SELECT  A.BRAND_ID
                                  , A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH
                                  ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN 1 - ROUND((MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)),3) ELSE 0 END AS MARGIN
                                  ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN ROUND(SUM(A.SALES) * (1 - (MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)))) ELSE 0 END AS SALES
                            FROM  (
                                   /* 월별로 합을 해야함 */
                                   SELECT A.STORE_ID
                                         ,A.BRAND_ID
                                         ,B.BRAND_MENU_CD
                                         ,B.MENU_ID
                                         ,B.MENU_CD
                                         ,BMM.BRAND_MENU_ID
                                         ,BMM.MENU_NM
                                         ,C.YEAR
                                         ,C.MONTH
                                         ,C.SALES
                                   FROM   TBL_EXP_STORE_MST A
                                          JOIN TBL_EXP_STORE_MENU_MST B 
                                              ON A.STORE_ID = B.STORE_ID
                                          JOIN TBL_EXP_BRAND_MENU_MASTER BMM 
                                             ON B.BRAND_MENU_CD = BMM.BRAND_MENU_CD
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                  AND BMM.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                  AND BMM.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                  AND BMM.BRAND_MENU_CD  = #{menu}
                                             </if>
                                          JOIN (
                                                   SELECT A.STORE_ID
                                                         ,A.MENU_ID
                                                         ,A.YEAR
                                                         ,A.MONTH
                                                         ,SUM(A.SALES) AS SALES
                                                   FROM   ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST A
                                                          JOIN TBL_EXP_STORE_MST B
                                                            ON  1 = 1
                                                            AND B.BRAND_ID = #{brandId}
                                                            AND A.STORE_ID = B.STORE_ID
                                                   WHERE  1 = 1
                                                   <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                       AND A.YEAR   = #{year}
                                                   </if>
                                                   GROUP BY A.STORE_ID
                                                           ,A.MENU_ID
                                                           ,A.YEAR
                                                           ,A.MONTH
                                               ) C 
                                            ON  B.STORE_ID = C.STORE_ID 
                                            AND B.MENU_ID  = C.MENU_ID 
                                   WHERE  A.BRAND_ID = #{brandId}
                                   <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                     AND    A.STORE_ID   = #{store}
                                   </if>
                                   <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                     AND    A.REGION   = #{region}
                                   </if>
                                   <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                     AND    A.SUPERVISOR   = #{supervisor}
                                   </if>
                                ) A
                                JOIN TBL_EXP_STORE_MENU_PRICE B
                                  ON  1 = 1
                                  AND A.BRAND_ID = B.BRAND_ID 
                                  AND A.STORE_ID = B.STORE_ID 
                                  AND A.MENU_CD  = B.MENU_CD 
                                  AND A.YEAR     = B.YEAR 
                                  AND A.MONTH    = B.MONTH 
                            GROUP BY A.BRAND_ID
                                  , A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH      
                            ORDER BY A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH  
                        ),
        TOP5_MENUS AS   (
                            /* 판매 마진 기준으로 상위 5개의 메뉴를 선택 */
                            SELECT BRAND_ID
                                  ,BRAND_MENU_ID
                                  ,MENU_NM
                                  ,SUM(SALES) AS TOTAL_MARGIN
                            FROM   BASE_TABLE
                            GROUP BY BRAND_ID, BRAND_MENU_ID,  MENU_NM
                            ORDER BY TOTAL_MARGIN DESC
                            FETCH FIRST 5 ROWS ONLY
                        )
        SELECT T.BRAND_MENU_ID
              ,T.MENU_NM
              ,B.MONTH
              ,TO_CHAR(B.SALES) AS SALES
              ,T.TOTAL_MARGIN
        FROM TOP5_MENUS T
             JOIN BASE_TABLE B
              ON  1 = 1
              AND T.BRAND_MENU_ID = B.BRAND_MENU_ID
        ORDER BY B.MONTH
               , T.TOTAL_MARGIN DESC
    </select>

    <select id="getmenuMarginDayTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginDayTop5 */
        WITH BASE_TABLE AS (      
              SELECT 
                   YEAR
                  ,MONTH
                  ,DAY
                  ,BRAND_MENU_CD
                  ,MENU_NM
                  ,SUM(SALES)          AS SALES    /* 매출 */
                  ,SUM(MCOST)          AS MCOST    /* 원가 */
                  ,SUM(SALES - MCOST)  AS MARGIN   /* 마진*/
              FROM (
                  SELECT 
                       YEAR
                      ,MONTH
                      ,DAY
                      ,UP.BRAND_MENU_CD
                      ,UP.MENU_NM
                      ,SALES
                      ,ROUND(SALES * UP.UNIT_PRICE_RATE       / 100) AS MCOST /* UNIT_PRICE_RATE 원가율*/
                  FROM 
                       (
	                      SELECT 
							 A.BRAND_MENU_CD
							,A.MENU_NM       	
							,A.COST_PRICE    	
							,A.SELLING_PRICE 	
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE))                               AS CONVERSION_UNIT_PRICE
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE) / A.SELLING_PRICE * 1000) / 10 AS UNIT_PRICE_RATE
	                      FROM 
							 TBL_EXP_BRAND_MENU_MASTER		A
							,TBL_EXP_MENU_RECIPE			B
							,VIEW_RECIPE_PRICE				C
	                      WHERE 1=1
	                          <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
	                               AND A.GROUP_1  = #{group1}
	                          </if>
	                          <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
	                               AND A.GROUP_2  = #{group2}
	                          </if>
                              <if test=" menu != null and !menu.equals('') ">
                                  AND B.BRAND_MENU_CD  IN  
                                  <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                          #{menu_cd.val}
                                  </foreach>  
                              </if>
								AND A.BRAND_MENU_ID		= B.BRAND_MENU_ID(+)
								AND B.RECIPE_CD			= C.RECIPE_CD(+)
		                        AND A.BRAND_ID           = #{brandId}
	                      GROUP BY 
	                           A.BRAND_ID         
	                          ,A.BRAND_MENU_CD
							  ,A.COST_PRICE    	
	                          ,A.MENU_NM
	                          ,A.SELLING_PRICE  
                      )UP
                      ,(
                          SELECT 
                               B.YEAR
                              ,B.MONTH
                              ,B.DAY
                              ,D.BRAND_MENU_CD
                              ,D.MENU_NM
                              ,SUM(SALES) AS SALES
                          FROM TBL_EXP_STORE_MST            A
                              ,${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST B
                              ,TBL_EXP_STORE_MENU_MST       C
                              ,TBL_EXP_BRAND_MENU_MASTER    D
                          WHERE 1=1
                              <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                  AND    A.STORE_ID   = #{store}
                              </if>
                              <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                  AND    A.REGION   = #{region}
                              </if>
                              <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                  AND    A.SUPERVISOR   = #{supervisor}
                              </if>
                              AND A.BRAND_ID      = #{brandId}
                              AND A.BRAND_ID      = B.BRAND_ID
                              AND A.STORE_ID      = B.STORE_ID
                              AND B.STORE_ID      = C.STORE_ID
                              AND B.YEAR          = #{year}
                              AND B.MONTH         = #{month}
                              AND B.MENU_CD       = C.MENU_CD
                              AND C.BRAND_MENU_CD = D.BRAND_MENU_CD(+)
                          GROUP BY 
                              B.YEAR, B.MONTH, B.DAY,  D.BRAND_MENU_CD, D.MENU_NM
                          ORDER BY 
                              B.YEAR, B.MONTH, B.DAY
                       )SL
                  WHERE 
                      UP.BRAND_MENU_CD = SL.BRAND_MENU_CD
              )        
              GROUP BY
                   BRAND_MENU_CD
                  ,MENU_NM
                  ,YEAR
                  ,MONTH
                  ,DAY
              ORDER BY BRAND_MENU_CD, MENU_NM, YEAR, MONTH, DAY    
        ),
        TOP5_MENUS AS   (
              /* 판매 마진 기준으로 상위 5개의 메뉴를 선택 */
              SELECT BRAND_MENU_CD
                    ,MENU_NM
                    ,SUM(SALES) AS TOTAL_MARGIN
              FROM   BASE_TABLE
              GROUP BY BRAND_MENU_CD,  MENU_NM
              ORDER BY TOTAL_MARGIN DESC
              FETCH FIRST 5 ROWS ONLY
        )
        SELECT T.BRAND_MENU_CD 
              ,T.MENU_NM
              ,B.MONTH
              ,B.DAY
              ,ROUND(B.SALES/10000) AS SALES
              ,ROUND(T.TOTAL_MARGIN/10000) AS TOTAL_MARGIN
        FROM TOP5_MENUS T
             JOIN BASE_TABLE B
              ON  1 = 1
              AND T.BRAND_MENU_CD = B.BRAND_MENU_CD
        ORDER BY B.MONTH, B.DAY
               , T.TOTAL_MARGIN DESC
    </select>

    <select id="getmenuMarginDayTop5_BAK" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginDayTop5 */
        WITH BASE_TABLE AS (
                            SELECT  A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH
                                  , A.DAY
                                  , SUM(A.SALES) AS SALES
                                  ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN 1 - ROUND((MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)),3) ELSE 0 END AS MARGIN
                                  ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN ROUND(SUM(A.SALES) * (1 - (MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)))) ELSE 0 END AS SALES_MARGIN
                            FROM  (
                                   /* 일별로 합을 해야함 */
                                   SELECT A.STORE_ID
                                         ,A.BRAND_ID
                                         ,B.BRAND_MENU_CD
                                         ,B.MENU_ID
                                         ,B.MENU_CD
                                         ,BMM.BRAND_MENU_ID
                                         ,BMM.MENU_NM
                                         ,C.YEAR
                                         ,C.MONTH
                                         ,C.DAY
                                         ,C.SALES
                                   FROM   TBL_EXP_STORE_MST A
                                          JOIN TBL_EXP_STORE_MENU_MST B 
                                              ON A.STORE_ID = B.STORE_ID
                                          JOIN TBL_EXP_BRAND_MENU_MASTER BMM 
                                             ON B.BRAND_MENU_CD = BMM.BRAND_MENU_CD
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                  AND BMM.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                  AND BMM.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                  AND BMM.BRAND_MENU_CD  = #{menu}
                                             </if>
                                          JOIN (
                                                   SELECT A.STORE_ID
                                                         ,A.MENU_ID
                                                         ,A.YEAR
                                                         ,A.MONTH
                                                         ,A.DAY
                                                         ,SUM(A.SALES) AS SALES
                                                   FROM   ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST A
                                                          JOIN TBL_EXP_STORE_MST B
                                                            ON  1 = 1
                                                            AND B.BRAND_ID = #{brandId}
                                                            AND A.STORE_ID = B.STORE_ID
                                                   WHERE  1 = 1
                                                   <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                       AND A.YEAR   = #{year}
                                                   </if>
                                                   <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                       AND A.MONTH  = #{month}
                                                   </if>
                                                   GROUP BY A.STORE_ID
                                                           ,A.MENU_ID
                                                           ,A.YEAR
                                                           ,A.MONTH
                                                           ,A.DAY
                                               ) C 
                                            ON  B.STORE_ID = C.STORE_ID 
                                            AND B.MENU_ID  = C.MENU_ID 
                                   WHERE  A.BRAND_ID = #{brandId}
                                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                         AND    A.STORE_ID   = #{store}
                                     </if>
                                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                         AND    A.REGION   = #{region}
                                     </if>
                                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                         AND    A.SUPERVISOR   = #{supervisor}
                                     </if>
                                ) A
                                JOIN TBL_EXP_STORE_MENU_PRICE B
                                  ON  1 = 1
                                  AND A.BRAND_ID = B.BRAND_ID 
                                  AND A.STORE_ID = B.STORE_ID 
                                  AND A.MENU_CD  = B.MENU_CD 
                                  AND A.YEAR     = B.YEAR 
                                  AND A.MONTH    = B.MONTH 
                            GROUP BY A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH  
                                  , A.DAY      
                            ORDER BY A.BRAND_MENU_ID
                                  , A.MENU_NM
                                  , A.YEAR
                                  , A.MONTH  
                                  , A.DAY    
                        ),
        TOP5_MENUS AS   (
                            /* 판매 마진 기준으로 상위 5개의 메뉴를 선택 */
                            SELECT BRAND_MENU_ID
                                  ,MENU_NM
                                  ,SUM(SALES_MARGIN) AS TOTAL_MARGIN
                            FROM   BASE_TABLE
                            GROUP BY BRAND_MENU_ID,  MENU_NM
                            ORDER BY TOTAL_MARGIN DESC
                            FETCH FIRST 5 ROWS ONLY
                        )
        SELECT T.BRAND_MENU_ID
              ,T.MENU_NM
              ,B.MONTH
              ,B.DAY
              ,B.SALES_MARGIN AS SALES
        FROM TOP5_MENUS T
             JOIN BASE_TABLE B
              ON  1 = 1
              AND T.BRAND_MENU_ID = B.BRAND_MENU_ID
        ORDER BY B.MONTH
                ,B.DAY
               , T.TOTAL_MARGIN DESC
    </select>
    <!--  -->
    <select id="getMenuMonthCostRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /* dashboardCorPerformance.getMenuMonthCostRanking */
	    WITH BASE_TABLE AS ( 
	          SELECT 
	               YEAR
	              ,MONTH
	              ,BRAND_MENU_CD
	              ,MENU_NM
	              ,SUM(SALES)            AS SALES       /* 매출 */
	              ,AVG(UNIT_PRICE_RATE)  AS COST_RATIO  /* 원가율 */
	              ,SUM(MCOST)            AS COST        /* 원가 */
	              ,SUM(SALES - MCOST)    AS MARGIN      /* 마진 */
	          FROM (
	              SELECT 
	                   YEAR
	                  ,MONTH
	                  ,UP.BRAND_MENU_CD
	                  ,UP.MENU_NM
	                  ,SALES
	                  ,UP.UNIT_PRICE_RATE
	                  ,ROUND(SALES * UP.UNIT_PRICE_RATE       / 100) AS MCOST
	              FROM 
	                   (
	                      SELECT 
							 A.BRAND_MENU_CD
							,A.MENU_NM       	
							,A.COST_PRICE    	
							,A.SELLING_PRICE 	
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE))                               AS CONVERSION_UNIT_PRICE
							,ROUND(SUM(B.QUANTITY * C.CONVERSION_UNIT_PRICE) / A.SELLING_PRICE * 1000) / 10 AS UNIT_PRICE_RATE
	                      FROM 
							 TBL_EXP_BRAND_MENU_MASTER		A
							,TBL_EXP_MENU_RECIPE			B
							,VIEW_RECIPE_PRICE				C
	                      WHERE 1=1
	                          <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
	                               AND A.GROUP_1  = #{group1}
	                          </if>
	                          <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
	                               AND A.GROUP_2  = #{group2}
	                          </if>
                              <if test=" menu != null and !menu.equals('') ">
                                  AND B.BRAND_MENU_CD  IN  
                                  <foreach item="menu_cd" index="index" collection="menu" separator="," open="(" close=")">
                                          #{menu_cd.val}
                                  </foreach>  
                              </if>
								AND A.BRAND_MENU_ID		= B.BRAND_MENU_ID(+)
								AND B.RECIPE_CD			= C.RECIPE_CD(+)
		                        AND A.BRAND_ID           = #{brandId}
	                      GROUP BY 
	                           A.BRAND_ID         
	                          ,A.BRAND_MENU_CD
							  ,A.COST_PRICE    	
	                          ,A.MENU_NM
	                          ,A.SELLING_PRICE  
	                   )UP
	                  ,(
	                      SELECT 
	                           B.YEAR
	                          ,B.MONTH
	                          ,D.BRAND_MENU_CD
	                          ,D.MENU_NM
	                          ,SUM(SALES) AS SALES
	                      FROM TBL_EXP_STORE_MST            A
	                          ,${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST B
	                          ,TBL_EXP_STORE_MENU_MST       C
	                          ,TBL_EXP_BRAND_MENU_MASTER    D
	                      WHERE 1=1
	                          <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
	                            AND    A.STORE_ID   = #{store}
	                          </if>
	                          <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
	                            AND    A.REGION   = #{region}
	                          </if>
	                          <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
	                            AND    A.SUPERVISOR   = #{supervisor}
	                          </if>
	                          AND A.BRAND_ID      = #{brandId} 
	                          AND A.BRAND_ID      = B.BRAND_ID 
	                          AND A.STORE_ID      = B.STORE_ID
	                          AND B.STORE_ID      = C.STORE_ID
	                          AND B.YEAR          = #{year}
                              <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                   AND B.MONTH  = #{month}
                              </if>
	                          AND B.MENU_CD       = C.MENU_CD
	                          AND C.BRAND_MENU_CD = D.BRAND_MENU_CD(+)
	                      GROUP BY 
	                          B.YEAR, B.MONTH, D.BRAND_MENU_CD, D.MENU_NM
	                      ORDER BY 
	                          B.YEAR, B.MONTH
	                   )SL
	              WHERE 
	                  UP.BRAND_MENU_CD = SL.BRAND_MENU_CD
	          )        
	          GROUP BY
	               BRAND_MENU_CD
	              ,MENU_NM
	              ,YEAR
	              ,MONTH 
	                    )
	    SELECT B.BRAND_MENU_CD 
	         , B.MENU_NM
             , ROUND(SUM(B.SALES)/10000)      AS SALES
             , ROUND(SUM(B.COST)/10000)       AS COST_PRICE
             , ROUND(SUM(B.MARGIN)/10000)     AS MARGIN  
	         , AVG(B.COST_RATIO) AS COST_RATIO 
	    FROM BASE_TABLE B
	    WHERE 1 = 1
	    AND  B.COST IS NOT NULL
	    GROUP BY B.BRAND_MENU_CD
	           , B.MENU_NM
	    ORDER BY
	    <if test=" 'COST'.equals(ORDERBY) ">
	        SUM(B.COST) DESC 
	    </if>
	    <if test=" 'MARGIN'.equals(ORDERBY) ">
	        SUM(B.MARGIN) DESC 
	    </if>
	    
    </select>
    
    <select id="getmenuMarginRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginRanking */
        WITH BASE_TABLE AS (
                       SELECT  A.BRAND_MENU_ID
                             , A.MENU_NM
                             , A.YEAR
                             , SUM(A.SALES) AS SALES
                             ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN 1 - ROUND((MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)),3) ELSE 0 END AS MARGIN
                             ,CASE WHEN NVL(MAX(B.SELLING_PRICE), 0) != 0 THEN ROUND(SUM(A.SALES) * (1 - (MAX(B.COST_PRICE) / MAX(B.SELLING_PRICE)))) ELSE 0 END AS SALES_MARGIN
                       FROM  (
                              /* 월별로 합을 해야함 */
                              SELECT A.STORE_ID
                                    ,A.BRAND_ID
                                    ,B.BRAND_MENU_CD
                                    ,B.MENU_ID
                                    ,B.MENU_CD
                                    ,BMM.BRAND_MENU_ID
                                    ,BMM.MENU_NM
                                    ,C.YEAR
                                    ,C.MONTH
                                    ,C.SALES
                              FROM   TBL_EXP_STORE_MST A
                                     JOIN TBL_EXP_STORE_MENU_MST B 
                                         ON A.STORE_ID = B.STORE_ID
                                     JOIN TBL_EXP_BRAND_MENU_MASTER BMM 
                                        ON B.BRAND_MENU_CD = BMM.BRAND_MENU_CD
                                        <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                             AND BMM.GROUP_1  = #{group1}
                                        </if>
                                        <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                             AND BMM.GROUP_2  = #{group2}
                                        </if>
                                        <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                             AND BMM.BRAND_MENU_CD  = #{menu}
                                        </if>
                                     JOIN (
                                              SELECT A.STORE_ID
                                                    ,A.MENU_ID
                                                    ,A.YEAR
                                                    ,A.MONTH
                                                    ,SUM(A.SALES) AS SALES
                                              FROM   ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST A
                                                     JOIN TBL_EXP_STORE_MST B
                                                       ON  1 = 1
                                                       AND B.BRAND_ID = #{brandId}
                                                       AND A.STORE_ID = B.STORE_ID
                                              WHERE  1 = 1
                                                   <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                       AND A.YEAR   = #{year}
                                                   </if>
                                                   <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                       AND A.MONTH   = #{month}
                                                   </if>
                                              GROUP BY A.STORE_ID
                                                      ,A.MENU_ID
                                                      ,A.YEAR
                                                      ,A.MONTH
                                          ) C 
                                       ON  B.STORE_ID = C.STORE_ID 
                                       AND B.MENU_ID  = C.MENU_ID 
                              WHERE  A.BRAND_ID = #{brandId}
                              <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                AND    A.STORE_ID   = #{store}
                              </if>
                              <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                AND    A.REGION   = #{region}
                              </if>
                              <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                AND    A.SUPERVISOR   = #{supervisor}
                              </if>
                           ) A
                           JOIN TBL_EXP_STORE_MENU_PRICE B
                             ON  1 = 1
                             AND A.BRAND_ID = B.BRAND_ID 
                             AND A.STORE_ID = B.STORE_ID 
                             AND A.MENU_CD  = B.MENU_CD 
                             AND A.YEAR     = B.YEAR 
                             AND A.MONTH    = B.MONTH 
                       GROUP BY A.BRAND_MENU_ID
                             , A.MENU_NM
                             , A.YEAR 
                           )
        SELECT BRAND_MENU_ID
              ,MENU_NM
              ,YEAR
              ,SALES
              ,MARGIN
              ,SALES_MARGIN
        FROM   BASE_TABLE
        ORDER BY SALES_MARGIN  DESC
    </select>
    <!-- 영업이익 예측 -->
    <select id="getBusinessProfit_bak" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getBusinessProfit */
        SELECT  B.BRAND_ID,
                A.STORE_ID,
                A.STORE_NM,
                B.YEAR,
                B.MONTH,
                B.YEAR||'-'||B.MONTH AS YEAR_MONTH,
                SUM(CASE WHEN B.SUBJECT = 'SUBJECT_104' THEN ROUND(B.AMOUNT * 100) ELSE 0 END) AS SUBJECT_104,
                SUM(CASE WHEN B.SUBJECT = 'SUBJECT_005' THEN ROUND(B.AMOUNT      ) ELSE 0 END) AS SUBJECT_005
        FROM    TBL_EXP_STORE_MST A
                JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                  ON A.BRAND_ID = B.BRAND_ID
                 AND A.STORE_ID = B.STORE_ID
                 AND B.SUBJECT IN ('SUBJECT_104', 'SUBJECT_005')
                 AND B.PREDICT_METHOD = 'MONTHLY_START'
                 AND TO_DATE(B.YEAR || '-' || B.MONTH, 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
        WHERE   A.BRAND_ID = #{brandId} 
        AND     A.STORE_ID = #{store}
        GROUP BY B.BRAND_ID,
                 A.STORE_ID,
                 A.STORE_NM,
                 B.YEAR,
                 B.MONTH
        ORDER BY B.BRAND_ID,
                 A.STORE_ID,
                 A.STORE_NM,
                 B.YEAR,
                 B.MONTH
        
    </select> 
    <!-- 영업이익 예측 -->
    <select id="getBusinessProfit" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getBusinessProfit */
        WITH TABLE_A AS (
            SELECT  REGIST_YM
                   ,BUSINESS_PROFIT_RATIO  AS BUSINESS_PROFIT_RATIO
            FROM    TBL_EXP_BRAND_BUSINESS_PROFIT_RATIO
            WHERE   1 = 1
            AND     BRAND_ID = #{brandId}
        )
        ,TABLE_B AS (      
                SELECT TAB1.YEAR
                      ,TAB1.MONTH
                      ,TAB1.YEAR||'-'||TAB1.MONTH  AS YEAR_MONTH
                      ,TAB1.YEAR||TAB1.MONTH       AS YM
                      ,ROUND(AVG(TAB1.SUBJECT_104)*100,2) AS SUBJECT_104
                      ,ROUND(SUM(TAB2.SUBJECT_005),2)     AS SUBJECT_005
                FROM   (
                        SELECT  B.STORE_ID
                               ,B.AMOUNT AS SUBJECT_104
                               ,B.YEAR
                               ,B.MONTH
                               ,B.PREDICT_METHOD
                               ,B.BASE_DATE
                        FROM    TBL_EXP_STORE_MST A
                                JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                                  ON  1 = 1
                                  AND A.BRAND_ID = B.BRAND_ID
                                  AND A.STORE_ID = B.STORE_ID
                                  AND B.SUBJECT  = 'SUBJECT_104'
                                  AND B.PREDICT_METHOD = 'MONTHLY_START'
                                  AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                                  AND LENGTH(B.MONTH) = 2
                        WHERE   A.BRAND_ID = #{brandId}
                        <if test=" !'ALL'.equals(region) ">
                            AND   A.REGION     = #{region}
                            <if test=" !'ALL'.equals(store) ">
                                AND   A.STORE_ID   = #{store}
                            </if>
                        </if>  
                        <if test=" 'ALL'.equals(region) ">
                            <if test=" !'ALL'.equals(store) ">
                                AND   A.STORE_ID   = #{store}
                            </if>
                        </if>
                       ) TAB1,
                       (
                       SELECT   B.STORE_ID
                               ,B.AMOUNT AS SUBJECT_005
                               ,B.YEAR
                               ,B.MONTH
                               ,B.PREDICT_METHOD
                               ,B.BASE_DATE
                       FROM     TBL_EXP_STORE_MST A
                                JOIN TBL_EXP_STORE_FINANCIAL_PREDICT B
                                  ON  1 = 1
                                  AND A.BRAND_ID = B.BRAND_ID
                                  AND A.STORE_ID = B.STORE_ID
                                  AND B.SUBJECT  = 'SUBJECT_005'
                                  AND B.PREDICT_METHOD = 'MONTHLY_START'
                                  AND TO_DATE(B.YEAR || '-' || LPAD(B.MONTH, 2, '0'), 'YYYY-MM') BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM')
                                  AND LENGTH(B.MONTH) = 2
                       WHERE 1 = 1
                       AND   A.BRAND_ID = #{brandId}
                       <if test=" !'ALL'.equals(region) ">
                           AND   A.REGION     = #{region}
                           <if test=" !'ALL'.equals(store) ">
                               AND   A.STORE_ID   = #{store}
                           </if>
                       </if>  
                       <if test=" 'ALL'.equals(region) ">
                           <if test=" !'ALL'.equals(store) ">
                               AND   A.STORE_ID   = #{store}
                           </if>
                       </if>
                       ) TAB2
                WHERE  TAB1.STORE_ID = TAB2.STORE_ID
                AND    TAB1.YEAR     = TAB2.YEAR
                AND    TAB1.MONTH    = TAB2.MONTH
                GROUP BY TAB1.YEAR
                        ,TAB1.MONTH
                ORDER BY TAB1.YEAR
                        ,TAB1.MONTH
                        
        ),
        RANKED_A AS (
            /* YEAR_MONTH별 가장 가까운 REGIST_YM 찾기 */
            SELECT  TABLE_A.REGIST_YM
                   ,TABLE_A.BUSINESS_PROFIT_RATIO
                   ,TABLE_B.YEAR_MONTH
                   ,TABLE_B.YM
                   ,ROW_NUMBER() OVER (PARTITION BY TABLE_B.YM ORDER BY TABLE_A.REGIST_YM DESC) AS RN
            FROM TABLE_A 
                 CROSS JOIN TABLE_B
            WHERE TABLE_A.REGIST_YM   <![CDATA[<=]]>   TABLE_B.YM  /* 가장 가까운 REGIST_YM 선택 */ 
        ),
        MIN_A AS (
            /* A 테이블에서 가장 작은 REGIST_YM (예외 처리용) */
            SELECT REGIST_YM
                  ,BUSINESS_PROFIT_RATIO 
            FROM   TABLE_A 
            WHERE  REGIST_YM = (SELECT MIN(REGIST_YM) FROM TABLE_A)
        )
        SELECT TABLE_B.YEAR
              ,TABLE_B.MONTH
              ,TABLE_B.YEAR_MONTH
              ,TABLE_B.SUBJECT_104
              ,ROUND((TABLE_B.SUBJECT_005)/10000) AS SUBJECT_005
              ,COALESCE(RA.REGIST_YM, MA.REGIST_YM) AS REGIST_YM
              ,COALESCE(RA.BUSINESS_PROFIT_RATIO, MA.BUSINESS_PROFIT_RATIO) AS BUSINESS_PROFIT_RATIO
              ,0 AS TAX_RATIO
        FROM TABLE_B
             LEFT JOIN RANKED_A RA 
                  ON  TABLE_B.YM = RA.YM 
                  AND RA.RN = 1
             LEFT JOIN MIN_A MA 
                  ON RA.REGIST_YM IS NULL  /* 가장 작은 REGIST_YM를 기본값으로 사용 */ 
        ORDER BY TABLE_B.YEAR_MONTH
    </select> 

    
    <!-- 지점 매출 조회 -->
    <select id="getStoreSalesMst" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStoreSalesMst */
        SELECT   STORE_SALES_ID
                ,STORE_ID
                ,YEAR
                ,MONTH
                ,DAY
                ,GROSS_SALES
                ,TAXABLE_AMOUNT
                ,SURTAX_SUM
                ,NET_SALES
                ,AVERAGE_SALES
                ,CUSTOMERS_NUM
                ,RECEIPT_CNT
                ,RECEIPT_PRICE
                ,CARD_SALES
                ,CASH_SALES
                ,DISCOUNT_PRICE
                ,ETC_SALES
                ,UPDATE_USER
                ,UPDATE_DATE
                ,CREATE_USER
                ,CREATE_DATE
        FROM    ${dbHdr}${posHdr}TBL_EXP_STORE_SALES_MST
        WHERE   1 = 1 
        <if test=" storeSalesId != null and storeSalesId != ''  ">
          AND STORE_SALES_ID = #{storeSalesId}
        </if>
        <if test=" storeId != null and storeId != ''  ">
          AND STORE_ID = #{storeId}
        </if>
        <if test=" year != null and year != ''  ">
          AND YEAR = #{year}
        </if>
        <if test=" month != null and month != ''  ">
          AND MONTH = #{month}
        </if>
        <if test=" day != null and day != ''  ">
          AND DAY = #{day}
        </if>
    </select> 
    
    <!-- 지점 매입 조회 -->
    <select id="getStorePurchaseMst" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStorePurchaseMst */
        SELECT  PURCHASE_ID
               ,STORE_ID
               ,YYYYMMDD
               ,CARD_AMOUNT
               ,CARD_COUNT
               ,CASH_AMOUNT
               ,CASH_COUNT
               ,TOTAL_AMOUNT
               ,TOTAL_COUNT
               ,UPDATE_USER
               ,UPDATE_DATE
               ,CREATE_USER
               ,CREATE_DATE
        FROM   TBL_EXP_STORE_PURCHASE_MST
        WHERE   1 = 1 
        <if test=" purchaseId != null and purchaseId != ''  ">
          AND PURCHASE_ID = #{purchaseId}
        </if>
        <if test=" storeCd != null and storeCd != ''  ">
          AND STORE_ID = #{storeCd}
        </if>
        <if test=" yyyymmdd != null and yyyymmdd != ''  ">
          AND YYYYMMDD = #{yyyymmdd}
        </if>
    </select> 
    
    <insert id="testExpJobScheduler" parameterType="map" >
        /*  dashboardCorPerformance.testExpJobScheduler */
        INSERT INTO TEST_EXP_JOB_SCHEDULER (
              TEST_01             
             ,TEST_02            
             ,TEST_03        
             ,TEST_04        
        )
        VALUES(
              #{TEST_01, jdbcType=VARCHAR}
             ,#{TEST_02, jdbcType=VARCHAR}
             ,#{TEST_03, jdbcType=VARCHAR}
             ,#{TEST_04, jdbcType=VARCHAR}
        )
    </insert>
    
    <!-- 지점 메뉴 매출 조회 -->
    <select id="getStoreMenuSalesMst" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStoreMenuSalesMst */
        SELECT   MENU_SALES_ID 
                ,STORE_ID       
                ,GROUP_1        
                ,GROUP_2        
                ,MENU_ID        
                ,MENU_CD
                ,YEAR           
                ,MONTH          
                ,DAY            
                ,SALES          
                ,DAY_AVERAGE    
                ,SALES_QUANTITY
                ,CASH           
                ,CARD           
                ,OTHER          
                ,DISCOUNT       
                ,UPDATE_USER     
                ,UPDATE_DATE     
                ,CREATE_USER     
                ,CREATE_DATE
        FROM    ${dbHdr}${posHdr}TBL_EXP_STORE_MENU_SALES_MST_BAK
        WHERE   1 = 1 
        <if test=" menuSalesId != null and menuSalesId != ''  ">
          AND MENU_SALES_ID = #{menuSalesId} 
        </if>     
        <if test=" storeId != null and storeId != ''  ">
          AND STORE_ID = #{storeId}
        </if>     
        <if test=" group_1 != null and group_1 != ''  ">
          AND GROUP_1 = #{group_1} 
        </if>     
        <if test=" group_2 != null and group_2 != ''  ">
          AND GROUP_2 = #{group_2}
        </if>     
        <if test=" menuId != null and menuId != ''  ">
          AND MENU_ID = #{menuId} 
        </if>     
        <if test=" menuCd != null and menuCd != ''  ">
          AND MENU_CD = #{menuCd} 
        </if>    
        <if test=" year != null and year != ''  ">
          AND YEAR = #{year}
        </if>    
        <if test=" month != null and month != ''  ">
          AND MONTH = #{month}
        </if>    
        <if test=" day != null and day != ''  ">
          AND DAY = #{day}
        </if>
    </select>    

</mapper>
